{"version":3,"sources":["supabase.js","auth/AuthProvider.js","navigation_items/navItem_data.js","components/Button.js","images/GGA Logo.svg","components/NavBar.js","images/bgImage.jpg","components/HomePage.js","styled_components/Button.js","components/InputField.js","components/AuthLogin.js","helper_functions/checkIfPasswordsMatch.js","components/AuthRegister.js","components/Card.js","hooks/useScrollBlock.js","components/Modal/CardModal.js","components/Games.js","components/Dashboard.js","components/TextAreaField.js","images/Upload_Instructions.svg","components/Upload.js","components/Discussions.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","process","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","session","auth","onAuthStateChange","event","a","listener","data","unsubscribe","value","signUp","signIn","signOut","Provider","navItems","id","title","url","Button","props","disabled","onClick","type","className","icon","NavBar","isLogged","setIsLogged","clickedItemId","setClickedItemId","click","setClick","toggleDropdown","setToggleDropdown","history","useHistory","iconStyles","color","width","height","toggleProfileDropdown","handleLogout","push","closeMobileMenu","setNavItemActive","to","src","Logo","alt","map","item","size","handleLogin","style","HomePage","bgImage","styled","button","InputField","forwardRef","ref","hasError","isFocused","labelText","placeholder","border","isfocused","onChange","accept","required","errorText","AuthLogin","error","setError","emailRef","createRef","passwordRef","e","preventDefault","email","current","password","message","onSubmit","checkIfPasswordsMatch","passwordToCompare","confirmedPasswordToCompare","AuthRegister","strength","setStrength","validation","setValidations","emailState","setEmailState","showPassword","setShowPassword","showConfirmedPassword","setShowConfirmedPassword","useRef","confirmPasswordRef","passwordStrength","validations","showPasswordToUser","showConfirmedPasswordToUser","validateEmail","test","length","search","reduce","accumulatedValue","currentValue","confirmedPassword","Card","URL","description","price","developer","safeDocument","document","useScrollBlock","scrollBlocked","html","documentElement","body","scrollBarWidth","window","innerWidth","clientWidth","bodyPaddingRight","parseInt","getComputedStyle","getPropertyValue","position","overflow","paddingRight","CardModal","openModal","setOpenModal","blockScroll","allowScroll","gameIsBought","setGameIsBought","purchaseMessage","setPurchaseMessage","showMessageOnGamePurchase","setTimeout","console","log","imageURL","desc","dev","GameCardDisplay","cards","setCards","toggle","setToggle","modalTitle","setModalTitle","modalDesc","setModalDesc","modalPrice","setModalPrice","modalUrl","setModalUrl","modalDev","setModalDev","cardArray","titles","descriptions","prices","developers","imageURLs","memoizedHandleClick","useCallback","getCardTitle","getCardDescription","getCardPrice","getCardImageURL","getCardDeveloper","from","select","index","element","t","d","p","listCards","image_url","getGames","Dashboard","success","setSuccess","isLoading","setIsLoading","userName","setUserName","userFirstName","setUserFirstName","userLastName","setUserLastName","fileState","setFileState","avatarUrl","setAvatarUrl","usernameRef","fnameRef","lnameRef","websiteRef","profileImgRef","fileUploadRef","getUserData","eq","firstName","lastName","avatar","username","first_name","last_name","avatar_url","fname","lname","website","storage","upload","name","getPublicUrl","imageUrl","upsert","publicURL","htmlFor","file","target","files","TextAreaField","reducer","state","action","titleErrorText","titleIsFocused","titleHasError","descriptionErrorText","descriptionIsFocused","descriptionHasError","priceErrorText","priceIsFocused","priceHasError","developerErrorText","developerIsFocused","developerHasError","defaultErrorState","payload","defaultErrorText","defaultFocusedState","Upload","useReducer","dispatch","gameTitleRef","gameDescriptionRef","gamePriceRef","gameDevRef","imageRef","checkIfInputHasValue","titleValue","descriptionValue","priceValue","developerValue","activeElement","isNaN","image","uploaded_by","includes","uploadInstructions","Discussions","inputRef","setErrorText","focused","setFocused","inputValue","errors","text","App","exact","path","component","Games","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bdf0d6f2.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_PUBLIC_ANON_KEY\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { supabase } from \"../supabase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nfunction AuthProvider({ children }) {\r\n  const [user, setUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const session = supabase.auth.session();\r\n\r\n    setUser(session?.user ?? null);\r\n    setLoading(false);\r\n\r\n    const { data: listener } = supabase.auth.onAuthStateChange(\r\n      async (event, session) => {\r\n        setUser(session?.user ?? null);\r\n        setLoading(false);\r\n      }\r\n    );\r\n    return () => {\r\n      listener?.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const value = {\r\n    signUp: (data) => supabase.auth.signUp(data),\r\n    signIn: (data) => supabase.auth.signIn(data),\r\n    signOut: () => supabase.auth.signOut(),\r\n    user,\r\n    loading,\r\n  };\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthProvider;\r\n","const navItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Games\",\r\n    url: \"/games\",\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Discussions\",\r\n    url: \"/discussions\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Upload\",\r\n    url: \"/upload\",\r\n  },\r\n];\r\n\r\nexport default navItems;\r\n","import React from \"react\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      disabled={props.disabled}\r\n      onClick={props.onClick}\r\n      id={props.id}\r\n      type={props.type}\r\n      className={props.className}\r\n    >\r\n      {props.value}\r\n      {props.icon}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/GGA Logo.e8635831.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport { supabase } from \"../supabase\";\r\nimport { AiOutlineMenu } from \"react-icons/ai\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { IoMdArrowDropdown, IoMdArrowDropup } from \"react-icons/io\";\r\nimport navItems from \"../navigation_items/navItem_data\";\r\nimport Button from \"./Button\";\r\nimport Logo from \"../images/GGA Logo.svg\";\r\n\r\nfunction NavBar() {\r\n  const { user, signOut } = useAuth();\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [clickedItemId, setClickedItemId] = useState();\r\n  const [click, setClick] = useState(true);\r\n  const [toggleDropdown, setToggleDropdown] = useState(false);\r\n  const history = useHistory();\r\n\r\n  //TODO <NavItem/> Component with isActive prop instead of mapping trough hardcoded object\r\n\r\n  let iconStyles = {\r\n    color: \"white\",\r\n    width: \"40\",\r\n    height: \"40\",\r\n  };\r\n\r\n  function toggleProfileDropdown() {\r\n    setToggleDropdown(!toggleDropdown);\r\n  }\r\n  async function handleLogout() {\r\n    await signOut();\r\n    history.push(\"/login\");\r\n  }\r\n  async function handleLogin() {\r\n    history.push(\"/login\");\r\n  }\r\n  async function handleClick() {\r\n    setClick(!click);\r\n  }\r\n  async function closeMobileMenu() {\r\n    setClick(true);\r\n  }\r\n  async function setNavItemActive(id) {\r\n    setClickedItemId(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setIsLogged(true);\r\n    } else {\r\n      setIsLogged(false);\r\n    }\r\n  }, [user, clickedItemId]);\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"logo\">\r\n        <Link onClick={setNavItemActive} id=\"logo\" to=\"/\">\r\n          <img src={Logo} alt=\"Back to homepage\" />\r\n        </Link>\r\n      </div>\r\n      {\r\n        <div className=\"web-nav\">\r\n          <div className=\"nav-links\">\r\n            {navItems.map((item) => (\r\n              <div key={item.id} className=\"nav-item\">\r\n                <Link\r\n                  onClick={() => {\r\n                    setNavItemActive(item.id);\r\n                  }}\r\n                  id={clickedItemId === item.id ? \"option-active\" : \"option\"}\r\n                  to={`${item.url}`}\r\n                >\r\n                  {item.title}\r\n                </Link>\r\n                <div\r\n                  className={clickedItemId === item.id ? \"active\" : null}\r\n                ></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      }\r\n      {isLogged ? (\r\n        <div className=\"profile-dropdown\">\r\n          <div className=\"profile-image\">\r\n            <img src=\"\" alt=\"\" />\r\n          </div>\r\n\r\n          <button className=\"dropdown-toggle\" onClick={toggleProfileDropdown}>\r\n            {toggleDropdown ? (\r\n              <IoMdArrowDropup size=\"20\" />\r\n            ) : (\r\n              <IoMdArrowDropdown size=\"20\" />\r\n            )}\r\n          </button>\r\n          {toggleDropdown ? (\r\n            <div className=\"dropdown-display\">\r\n              <div id=\"dropdown-item\">\r\n                <Link onClick={toggleProfileDropdown} id=\"item\" to=\"/dashboard\">\r\n                  Profile\r\n                </Link>\r\n              </div>\r\n              <Button\r\n                id=\"logout-btn\"\r\n                onClick={() => {\r\n                  handleLogout();\r\n                  toggleProfileDropdown();\r\n                }}\r\n                value=\"Log out\"\r\n              />\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      ) : (\r\n        <div className=\"btn-container\">\r\n          <Button\r\n            id=\"login-btn\"\r\n            onClick={() => {\r\n              handleLogin();\r\n              setNavItemActive();\r\n            }}\r\n            value=\"Log in\"\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"mobile-nav\">\r\n        <div className=\"hamburger-menu\" onClick={handleClick}>\r\n          {click ? (\r\n            <AiOutlineMenu style={iconStyles} />\r\n          ) : (\r\n            <AiOutlineClose style={iconStyles} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={click ? \"nav-menu\" : \"nav-menu active\"}>\r\n        {isLogged ? (\r\n          <div className=\"menu\">\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/games\">\r\n              Games\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/discussions\">\r\n              Discussions\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/upload\">\r\n              Upload\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/dashboard\">\r\n              Account\r\n            </Link>\r\n            <Link\r\n              onClick={() => {\r\n                handleLogout();\r\n                closeMobileMenu();\r\n              }}\r\n              id=\"logout-btn-m\"\r\n              to=\"/login\"\r\n            >\r\n              Log out\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"menu\">\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/games\">\r\n              Games\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/discussions\">\r\n              Discussions\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/register\">\r\n              Sign up\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"login-btn-m\" to=\"/login\">\r\n              Log in\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/bgImage.99dc8eaf.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport \"../styles/HomePage.css\";\r\nimport bgImage from \"../images/bgImage.jpg\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\n\r\nfunction HomePage() {\r\n  const history = useHistory();\r\n  const { user } = useAuth();\r\n  const [isLogged, setIsLogged] = useState(false);\r\n\r\n  async function handleClick() {\r\n    history.push(\"/register\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    user ? setIsLogged(true) : setIsLogged(false);\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"welcome-message-m\">\r\n        <h1>Game Gallery</h1>\r\n        <span>\r\n          If you are a game-dev enthusiast, this is the place for you to promote\r\n          your games!\r\n        </span>\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <div className=\"content-container\">\r\n          <div className=\"welcome-message\">\r\n            <h1>Game Gallery</h1>\r\n            <span>\r\n              If you are a game-dev enthusiast, this is the place for you to\r\n              promote your games!\r\n            </span>\r\n          </div>\r\n          <div className=\"top-highlight\"></div>\r\n          <div className=\"bottom-highlight\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"image-wrapper\">\r\n        <img src={bgImage} alt=\"\" />\r\n        {!isLogged ? (\r\n          <Button\r\n            onClick={handleClick}\r\n            id=\"sign-up\"\r\n            value=\"Sign up\"\r\n            icon={<BsArrowRight size=\"20\" />}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007fc4;\r\n  border: none;\r\n  color: var(--main-theme-color-white);\r\n  font-weight: var(--font-w-6);\r\n  font-size: 16px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: #008eda;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nconst InputField = forwardRef((props, ref) => {\r\n  const { hasError, isFocused } = props;\r\n  const focusedStyles = {\r\n    border: \"1px solid red\",\r\n  };\r\n  return (\r\n    <div className=\"input-container\">\r\n      {props.labelText ? <label>{props.labelText}</label> : null}\r\n      <input\r\n        className={props.className}\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        style={isFocused ? focusedStyles : props.style}\r\n        isfocused={props.isFocused}\r\n        onClick={props.onClick}\r\n        onChange={props.onChange}\r\n        accept={props.accept}\r\n        ref={ref}\r\n        required\r\n      />\r\n      {props.icon ? (\r\n        <span onClick={props.onClick} className=\"toggle-visible\">\r\n          {props.icon}\r\n        </span>\r\n      ) : null}\r\n      {hasError ? <span className=\"input-error\">{props.errorText}</span> : null}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default InputField;\r\n","import React, { useState, createRef } from \"react\";\r\nimport \"../styles/Auth.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport Button from \"../styled_components/Button\";\r\nimport InputField from \"./InputField\";\r\n\r\nfunction AuthLogin() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const emailRef = createRef();\r\n  const passwordRef = createRef();\r\n  const { signIn } = useAuth();\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    const { error } = await signIn({ email, password });\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <div id=\"heading\">Log in</div>\r\n        <div className={error ? \"error\" : null}>{error}</div>\r\n        <form className=\"login-form\" onSubmit={handleSubmit}>\r\n          <InputField\r\n            className=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            ref={emailRef}\r\n          />\r\n          <InputField\r\n            className=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            ref={passwordRef}\r\n          />\r\n          <Button disabled={loading} type=\"submit\">\r\n            {loading ? <span>Loading...</span> : <span>Log in</span>}\r\n          </Button>\r\n          <Link to=\"/register\" id=\"reg-redirect\">\r\n            Don't have an account? Register here.\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthLogin;\r\n","export const checkIfPasswordsMatch = (\r\n  passwordToCompare,\r\n  confirmedPasswordToCompare\r\n) => {\r\n  const password = passwordToCompare;\r\n  const confirmedPassword = confirmedPasswordToCompare;\r\n  if (password !== confirmedPassword) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport Button from \"../styled_components/Button\";\r\nimport \"../styles/Auth.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport { checkIfPasswordsMatch } from \"../helper_functions/checkIfPasswordsMatch\";\r\nimport InputField from \"./InputField\";\r\nimport { IoIosClose } from \"react-icons/io\";\r\nimport { IoIosCheckmark } from \"react-icons/io\";\r\nimport { BiShow } from \"react-icons/bi\";\r\nimport { BiHide } from \"react-icons/bi\";\r\n\r\nfunction AuthRegister() {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [strength, setStrength] = useState();\r\n  const [validation, setValidations] = useState([]);\r\n  const [emailState, setEmailState] = useState();\r\n  const [showPassword, setShowPassword] = useState();\r\n  const [showConfirmedPassword, setShowConfirmedPassword] = useState();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const confirmPasswordRef = useRef();\r\n  const history = useHistory();\r\n  const { signUp } = useAuth();\r\n\r\n  let passwordStrength = 0;\r\n  let validations = [];\r\n\r\n  function showPasswordToUser() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n  function showConfirmedPasswordToUser() {\r\n    setShowConfirmedPassword(!showConfirmedPassword);\r\n  }\r\n\r\n  function validateEmail() {\r\n    const regex =\r\n      /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n    setError(\"\");\r\n    setEmailState(emailRef.current.value);\r\n    if (regex.test(emailState) === false) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async function validatePassword() {\r\n    const password = passwordRef.current.value;\r\n\r\n    validations = [\r\n      password.length >= 8,\r\n      password.search(/[A-Z]/) > -1,\r\n      password.search(/[0-9]/) > -1,\r\n      password.search(/[!%$&+,:;=?@#]/) > -1,\r\n    ];\r\n    passwordStrength = validations.reduce(\r\n      (accumulatedValue, currentValue) => accumulatedValue + currentValue\r\n    );\r\n    setStrength(passwordStrength);\r\n    setValidations(validations);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    const confirmedPassword = confirmPasswordRef.current.value;\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n    validateEmail();\r\n\r\n    if (!checkIfPasswordsMatch(password, confirmedPassword)) {\r\n      setLoading(false);\r\n      return setError(\"Passwords do not match.\");\r\n    }\r\n\r\n    if (strength < 4) {\r\n      setError(\"Password does not meet the requirements.\");\r\n    } else {\r\n      const { data } = await signUp({\r\n        email: email,\r\n        password: password,\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <div className=\"register-container\">\r\n        <div id=\"heading\">Create an account</div>\r\n        <form className=\"register-form\" onSubmit={handleSubmit}>\r\n          <div className=\"error\">{error}</div>\r\n          <InputField\r\n            type=\"email\"\r\n            className=\"email\"\r\n            placeholder=\"Email\"\r\n            ref={emailRef}\r\n            required\r\n          />\r\n          <InputField\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            className=\"password\"\r\n            placeholder=\"Password\"\r\n            ref={passwordRef}\r\n            onChange={validatePassword}\r\n            icon={\r\n              showPassword ? (\r\n                <BiHide color=\"008eda\" onClick={showPasswordToUser} />\r\n              ) : (\r\n                <BiShow color=\"008eda\" onClick={showPasswordToUser} />\r\n              )\r\n            }\r\n            required\r\n          />\r\n          <InputField\r\n            type={showConfirmedPassword ? \"text\" : \"password\"}\r\n            className=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            ref={confirmPasswordRef}\r\n            icon={\r\n              showConfirmedPassword ? (\r\n                <BiHide color=\"008eda\" onClick={showConfirmedPasswordToUser} />\r\n              ) : (\r\n                <BiShow color=\"008eda\" onClick={showConfirmedPasswordToUser} />\r\n              )\r\n            }\r\n            required\r\n          />\r\n          <div className=\"validations\">\r\n            <div>\r\n              {validation[0] ? (\r\n                <IoIosCheckmark size=\"20\" color=\"green\" />\r\n              ) : (\r\n                <IoIosClose size=\"20\" color=\"red\" />\r\n              )}\r\n              <span>Password must be at least 8 characters.</span>\r\n            </div>\r\n            <div>\r\n              {validation[1] ? (\r\n                <IoIosCheckmark size=\"20\" color=\"green\" />\r\n              ) : (\r\n                <IoIosClose size=\"20\" color=\"red\" />\r\n              )}\r\n              <span>Password must have at least one uppercase letter.</span>\r\n            </div>\r\n            <div>\r\n              {validation[2] ? (\r\n                <IoIosCheckmark size=\"20\" color=\"green\" />\r\n              ) : (\r\n                <IoIosClose size=\"20\" color=\"red\" />\r\n              )}\r\n              <span>Password must have at least one number.</span>\r\n            </div>\r\n            <div>\r\n              {validation[3] ? (\r\n                <IoIosCheckmark size=\"20\" color=\"green\" />\r\n              ) : (\r\n                <IoIosClose size=\"20\" color=\"red\" />\r\n              )}\r\n              <span>Password must have at least one special character.</span>\r\n            </div>\r\n          </div>\r\n          <Button disabled={loading} type=\"submit\">\r\n            {loading ? <span>Loading...</span> : <span>Sign in</span>}{\" \"}\r\n          </Button>\r\n          <Link to=\"/login\" id=\"reg-redirect\">\r\n            Already have an account? Log in.\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthRegister;\r\n","import React from \"react\";\r\nimport \"../styles/Card.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\" onClick={props.onClick}>\r\n      <div className=\"card-image\">\r\n        <img src={`${props.URL}`} alt=\"\" />\r\n        <div className=\"card-info\">\r\n          <div id=\"card-title\">\r\n            <h2>{props.title}</h2>\r\n          </div>\r\n          <div id=\"card-description\">\r\n            <small>{props.description}</small>\r\n          </div>\r\n          <div id=\"card-item-price\">\r\n            <p>{props.price}</p>\r\n          </div>\r\n          <div id=\"card-item-developer\">\r\n            <p>{props.developer}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useRef } from \"react\";\r\n\r\nconst safeDocument = typeof document !== \"undefined\" ? document : {};\r\n\r\n/**\r\n * Usage:\r\n * const [blockScroll, allowScroll] = useScrollBlock();\r\n */\r\nexport const useScrollBlock = () => {\r\n  const scrollBlocked = useRef();\r\n  const html = safeDocument.documentElement;\r\n  const { body } = safeDocument;\r\n\r\n  const blockScroll = () => {\r\n    if (!body || !body.style || scrollBlocked.current) return;\r\n\r\n    const scrollBarWidth = window.innerWidth - html.clientWidth;\r\n    const bodyPaddingRight =\r\n      parseInt(\r\n        window.getComputedStyle(body).getPropertyValue(\"padding-right\")\r\n      ) || 0;\r\n\r\n    html.style.position = \"relative\"; /* [1] */\r\n    html.style.overflow = \"hidden\"; /* [2] */\r\n    body.style.position = \"relative\"; /* [1] */\r\n    // body.style.overflow = \"hidden\"; /* [2] */\r\n    body.style.paddingRight = `${bodyPaddingRight + scrollBarWidth}px`;\r\n\r\n    scrollBlocked.current = true;\r\n  };\r\n\r\n  const allowScroll = () => {\r\n    if (!body || !body.style || !scrollBlocked.current) return;\r\n\r\n    html.style.position = \"\";\r\n    html.style.overflow = \"\";\r\n    body.style.position = \"\";\r\n    // body.style.overflow = \"\";\r\n    body.style.paddingRight = \"\";\r\n\r\n    scrollBlocked.current = false;\r\n  };\r\n\r\n  return [blockScroll, allowScroll];\r\n};\r\nexport default useScrollBlock;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../../styles/CardModal.css\";\r\nimport Button from \"../Button\";\r\nimport useScrollBlock from \"../../hooks/useScrollBlock\";\r\nimport { RiCloseLine } from \"react-icons/ri\";\r\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\r\n\r\nexport const CardModal = (props) => {\r\n  let iconStyles = {\r\n    color: \"whitesmoke\",\r\n    width: \"30\",\r\n    height: \"30\",\r\n  };\r\n  let loaderStyle = {\r\n    color: \"white\",\r\n    width: \"28\",\r\n    height: \"28\",\r\n  };\r\n\r\n  const { openModal, setOpenModal } = props;\r\n  const [blockScroll, allowScroll] = useScrollBlock();\r\n  const [loading, setLoading] = useState();\r\n  const [gameIsBought, setGameIsBought] = useState(false);\r\n  const [purchaseMessage, setPurchaseMessage] = useState();\r\n\r\n  const closeModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  async function showMessageOnGamePurchase() {\r\n    //TODO Make it so the message is displayed only on the modal you've clicked, not for every card.\r\n    setPurchaseMessage(\"Thank you for your purchase!\");\r\n    setGameIsBought(true);\r\n    setLoading(false);\r\n  }\r\n  async function buyGame() {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      showMessageOnGamePurchase();\r\n    }, 5000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(openModal);\r\n    openModal ? blockScroll() : allowScroll();\r\n  }, [openModal]);\r\n  return (\r\n    <>\r\n      {openModal ? (\r\n        <div className=\"card-modal\">\r\n          <div className=\"window\">\r\n            <div className=\"window-content\">\r\n              <div className=\"close-modal\">\r\n                <Button\r\n                  className=\"close\"\r\n                  onClick={closeModal}\r\n                  value={<RiCloseLine style={iconStyles} />}\r\n                />\r\n              </div>\r\n              <div className=\"image-container\">\r\n                <img src={props.imageURL} alt=\"s\" />\r\n              </div>\r\n              <div className=\"card-info-container\">\r\n                {!gameIsBought ? (\r\n                  <>\r\n                    <h2 className=\"title\">{props.title}</h2>\r\n                    <p className=\"description\">{props.desc}</p>\r\n                    <p className=\"price\">{props.price}</p>\r\n                    <p className=\"developer\">{props.dev}</p>\r\n                  </>\r\n                ) : (\r\n                  <span style={{ color: \"lime\" }}>{purchaseMessage}</span>\r\n                )}\r\n              </div>\r\n              <div className=\"button\">\r\n                {!gameIsBought ? (\r\n                  <Button\r\n                    disabled={loading}\r\n                    id=\"buy-btn\"\r\n                    onClick={buyGame}\r\n                    value={\r\n                      loading ? (\r\n                        <div className=\"loader-container\">\r\n                          <span className=\"loader\">\r\n                            <AiOutlineLoading3Quarters style={loaderStyle} />\r\n                          </span>\r\n                        </div>\r\n                      ) : (\r\n                        \"Buy\"\r\n                      )\r\n                    }\r\n                  />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardModal;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { supabase } from \"../supabase\";\r\nimport { CardModal } from \"./Modal/CardModal\";\r\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\r\nimport \"../styles/Games.css\";\r\n\r\nfunction GameCardDisplay() {\r\n  const [cards, setCards] = useState();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState();\r\n  const [modalDesc, setModalDesc] = useState();\r\n  const [modalPrice, setModalPrice] = useState();\r\n  const [modalUrl, setModalUrl] = useState();\r\n  const [modalDev, setModalDev] = useState();\r\n  const cardArray = [];\r\n  const titles = [];\r\n  const descriptions = [];\r\n  const prices = [];\r\n  const developers = [];\r\n  const imageURLs = [];\r\n\r\n  const iconStyles = {\r\n    color: \"007fc4\",\r\n    width: \"50\",\r\n    height: \"50\",\r\n  };\r\n\r\n  const memoizedHandleClick = useCallback(\r\n    () => {\r\n      setToggle(true);\r\n    },\r\n    [] // Tells React to memoize regardless of arguments.\r\n  );\r\n  const getCardTitle = (title) => {\r\n    setModalTitle(title);\r\n  };\r\n  const getCardDescription = (desc) => {\r\n    setModalDesc(desc);\r\n  };\r\n  const getCardPrice = (price) => {\r\n    setModalPrice(price);\r\n  };\r\n  const getCardImageURL = (url) => {\r\n    setModalUrl(url);\r\n  };\r\n  const getCardDeveloper = (dev) => {\r\n    setModalDev(dev);\r\n  };\r\n\r\n  async function getGames() {\r\n    setLoading(true);\r\n    const { data } = await supabase.from(\"games\").select();\r\n    const { data: title } = await supabase.from(\"games\").select(\"title\");\r\n    const { data: description } = await supabase\r\n      .from(\"games\")\r\n      .select(\"description\");\r\n    const { data: price } = await supabase.from(\"games\").select(\"price\");\r\n    const { data: imageURL } = await supabase.from(\"games\").select(\"image_url\");\r\n    const { data: developer } = await supabase\r\n      .from(\"games\")\r\n      .select(\"developer\");\r\n\r\n    if (data.length === 0) {\r\n      setLoading(false);\r\n      setError(\"Sorry... There aren't any games yet.\");\r\n    } else {\r\n      for (let index = 0; index < data.length; index++) {\r\n        const element = cardArray[index];\r\n        cardArray.push(element);\r\n      }\r\n\r\n      for (var t in title) {\r\n        titles.push(title[t]);\r\n      }\r\n      for (var d in description) {\r\n        descriptions.push(description[d]);\r\n      }\r\n      for (var p in price) {\r\n        prices.push(price[p]);\r\n      }\r\n      for (var dev in developer) {\r\n        developers.push(developer[dev]);\r\n      }\r\n      for (var url in imageURL) {\r\n        imageURLs.push(imageURL[url]);\r\n      }\r\n\r\n      const listCards = cardArray.map((item, index) => (\r\n        <Card\r\n          key={index}\r\n          URL={imageURLs[index].image_url}\r\n          title={titles[index].title}\r\n          description={descriptions[index].description}\r\n          price={`${prices[index].price}$`}\r\n          developer={developers[index].developer}\r\n          onClick={() => {\r\n            memoizedHandleClick();\r\n            getCardTitle(titles[index].title);\r\n            getCardDescription(descriptions[index].description);\r\n            getCardPrice(`${prices[index].price}$`);\r\n            getCardDeveloper(developers[index].developer);\r\n            getCardImageURL(imageURLs[index].image_url);\r\n          }}\r\n        />\r\n      ));\r\n      setCards(listCards);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (!cards) {\r\n      getGames();\r\n    }\r\n  }, [modalTitle]);\r\n\r\n  return (\r\n    <>\r\n      <CardModal\r\n        title={modalTitle}\r\n        desc={modalDesc}\r\n        price={modalPrice}\r\n        imageURL={modalUrl}\r\n        dev={modalDev}\r\n        openModal={toggle}\r\n        setOpenModal={setToggle}\r\n      />\r\n      <div className=\"game-display-page\">\r\n        {loading ? (\r\n          <div className=\"loader-container\">\r\n            <div className=\"loader\">\r\n              <AiOutlineLoading3Quarters style={iconStyles} />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className={error ? \"content-error\" : \"content-page\"}>\r\n            {error ? error : cards}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GameCardDisplay;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"../styles/Dashboard.css\";\r\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport { supabase } from \"../supabase\";\r\nimport Button from \"./Button\";\r\nimport InputField from \"./InputField\";\r\n\r\nfunction Dashboard() {\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userFirstName, setUserFirstName] = useState(\"\");\r\n  const [userLastName, setUserLastName] = useState(\"\");\r\n  const [fileState, setFileState] = useState();\r\n  const [avatarUrl, setAvatarUrl] = useState();\r\n  const usernameRef = useRef();\r\n  const fnameRef = useRef();\r\n  const lnameRef = useRef();\r\n  const websiteRef = useRef();\r\n  const profileImgRef = useRef();\r\n  const fileUploadRef = useRef();\r\n  const { user } = useAuth();\r\n\r\n  let loaderStyle = {\r\n    color: \"white\",\r\n    width: \"20\",\r\n    height: \"20\",\r\n  };\r\n\r\n  const getImageFile = (e) => {\r\n    const file = e.target.files[0];\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    setFileState(file);\r\n  };\r\n\r\n  async function getUserData() {\r\n    const { data } = await supabase\r\n      .from(\"profiles\")\r\n      .select(\"username\")\r\n      .eq(\"id\", user?.id);\r\n    const { data: firstName } = await supabase\r\n      .from(\"profiles\")\r\n      .select(\"first_name\")\r\n      .eq(\"id\", user?.id);\r\n    const { data: lastName } = await supabase\r\n      .from(\"profiles\")\r\n      .select(\"last_name\")\r\n      .eq(\"id\", user?.id);\r\n    const { data: avatar } = await supabase\r\n      .from(\"profiles\")\r\n      .select(\"avatar_url\")\r\n      .eq(\"id\", user?.id);\r\n    setUserName(data[0].username);\r\n    setUserFirstName(firstName[0].first_name);\r\n    setUserLastName(lastName[0].last_name);\r\n    setAvatarUrl(avatar[0].avatar_url);\r\n    console.log(avatarUrl);\r\n  }\r\n  async function updateProfile() {\r\n    setIsLoading(true);\r\n    const username = usernameRef.current.value;\r\n    const fname = fnameRef.current.value;\r\n    const lname = lnameRef.current.value;\r\n    const website = websiteRef.current.value;\r\n\r\n    const { data: img } = await supabase.storage\r\n      .from(\"avatars\")\r\n      .upload(`profile_images/${fileState.name}`, fileState);\r\n    const { data: imageUrl } = await supabase.storage\r\n      .from(\"avatars\")\r\n      .getPublicUrl(`profile_images/${fileState.name}`);\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    const { error } = await supabase.from(\"profiles\").upsert({\r\n      id: user?.id,\r\n      username: username,\r\n      first_name: fname,\r\n      last_name: lname,\r\n      website: website,\r\n      avatar_url: imageUrl.publicURL,\r\n    });\r\n\r\n    if (error) {\r\n      setSuccess(\"\");\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n    } else {\r\n      setError(\"\");\r\n      setSuccess(\"Changes saved successfully.\");\r\n      getUserData();\r\n      usernameRef.current.value = \"\";\r\n      fnameRef.current.value = \"\";\r\n      lnameRef.current.value = \"\";\r\n      websiteRef.current.value = \"\";\r\n      fileUploadRef.current.value = \"\";\r\n      setIsLoading(false);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, [userName, userFirstName, userLastName]);\r\n\r\n  return (\r\n    <div className=\"account-page\">\r\n      <div className=\"profile-container\">\r\n        <div className=\"avatar-container\">\r\n          <div className=\"avatar\">\r\n            <img src={avatarUrl} alt=\"\" ref={profileImgRef} />\r\n          </div>\r\n        </div>\r\n        <div className=\"upload-avatar\">\r\n          <label htmlFor=\"file-upload\" className=\"file-upload-button\">\r\n            Upload image\r\n          </label>\r\n          <InputField\r\n            id=\"file-upload\"\r\n            type=\"file\"\r\n            onChange={getImageFile}\r\n            accept=\"image/png\"\r\n            ref={fileUploadRef}\r\n          />\r\n        </div>\r\n        <div className=\"user-info\">\r\n          <div className=\"names\">\r\n            <p>\r\n              {userFirstName} {userLastName}\r\n            </p>\r\n            <small>{userName}</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"notification-handling\">\r\n          <div className={success ? \"success\" : null}>{success}</div>\r\n          <div className={error ? \"error\" : null}>{error}</div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"header\">\r\n            <label>General</label>\r\n          </div>\r\n          <div className=\"sub-header\">\r\n            <div className=\"sub-header-content\">\r\n              <label>Username</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                value={userName}\r\n                ref={usernameRef}\r\n              ></input>\r\n            </div>\r\n            <div className=\"sub-header-content\">\r\n              <label>First name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"fname\"\r\n                value={userFirstName}\r\n                ref={fnameRef}\r\n              ></input>\r\n            </div>\r\n            <div className=\"sub-header-content\">\r\n              <label>Last name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"lname\"\r\n                value={userLastName}\r\n                ref={lnameRef}\r\n              ></input>\r\n            </div>\r\n            <div className=\"sub-header-content\">\r\n              <label>Website</label>\r\n              <input type=\"text\" id=\"website\" ref={websiteRef}></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"header\">\r\n            <label>Security</label>\r\n          </div>\r\n          <div className=\"sub-header\">\r\n            <div className=\"sub-header-content\">\r\n              <label>Password</label>\r\n              <input type=\"password\" id=\"password\"></input>\r\n            </div>\r\n            <div className=\"sub-header-content\">\r\n              <label>Confirm new password</label>\r\n              <input type=\"password\" id=\"c-password\"></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <Button\r\n            onClick={updateProfile}\r\n            id=\"save-btn\"\r\n            disabled={isLoading}\r\n            value={\r\n              isLoading ? (\r\n                <div className=\"button-loader\">\r\n                  <span className=\"loader-btn\">\r\n                    <AiOutlineLoading3Quarters style={loaderStyle} />\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                \"Save\"\r\n              )\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Dashboard;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nconst TextAreaField = forwardRef((props, ref) => {\r\n  const { hasError, isFocused } = props;\r\n  const focusedStyles = {\r\n    border: \"1px solid red\",\r\n  };\r\n  return (\r\n    <div className=\"textarea-container\">\r\n      {props.value ? <label>{props.value}</label> : null}\r\n      <textarea\r\n        className={props.className}\r\n        style={isFocused ? focusedStyles : props.style}\r\n        onChange={props.onChange}\r\n        onClick={props.onClick}\r\n        placeholder={props.placeholder}\r\n        isfocused={props.isFocused}\r\n        ref={ref}\r\n        required\r\n      />\r\n      {hasError ? <span className=\"input-error\">{props.errorText}</span> : null}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default TextAreaField;\r\n","export default __webpack_public_path__ + \"static/media/Upload_Instructions.2b83e67c.svg\";","import React, { useState, useRef, useReducer, useEffect } from \"react\";\r\nimport \"../styles/Upload.css\";\r\nimport { supabase } from \"../supabase\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport Button from \"./Button\";\r\nimport TextAreaField from \"./TextAreaField\";\r\nimport uploadInstructions from \"../images/Upload_Instructions.svg\";\r\nimport InputField from \"./InputField\";\r\n\r\nfunction resetInputError(\r\n  defaultErrorState,\r\n  defaultFocusedState,\r\n  defaultErrorText\r\n) {\r\n  return {\r\n    errorText: defaultErrorText,\r\n    isFocused: defaultFocusedState,\r\n    hasError: defaultErrorState,\r\n  };\r\n}\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"TITLE_CLICK\":\r\n      return {\r\n        titleErrorText: (state.errorText = \"This field is required.\"),\r\n        titleIsFocused: (state.isFocused = true),\r\n        titleHasError: (state.hasError = true),\r\n      };\r\n    case \"DESCRIPTION_CLICK\":\r\n      return {\r\n        descriptionErrorText: (state.errorText = \"This field is required.\"),\r\n        descriptionIsFocused: (state.isFocused = true),\r\n        descriptionHasError: (state.hasError = true),\r\n      };\r\n    case \"PRICE_CLICK\":\r\n      return {\r\n        priceErrorText: (state.errorText =\r\n          \"The field cannot contain letters or special symbols.\"),\r\n        priceIsFocused: (state.isFocused = true),\r\n        priceHasError: (state.hasError = true),\r\n      };\r\n    case \"DEVELOPER_CLICK\":\r\n      return {\r\n        developerErrorText: (state.errorText = \"This field is required.\"),\r\n        developerIsFocused: (state.isFocused = true),\r\n        developerHasError: (state.hasError = true),\r\n      };\r\n    case \"RESET\":\r\n      return resetInputError(action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction Upload() {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    titleHasError: false,\r\n    titleIsFocused: false,\r\n    titleErrorText: \"\",\r\n    descriptionHasError: false,\r\n    descriptionIsFocused: false,\r\n    descriptionErrorText: \"\",\r\n    priceHasError: false,\r\n    priceIsFocused: false,\r\n    priceErrorText: \"\",\r\n    developerHasError: false,\r\n    developerIsFocused: false,\r\n    developerErrorText: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fileState, setFileState] = useState();\r\n  const gameTitleRef = useRef();\r\n  const gameDescriptionRef = useRef();\r\n  const gamePriceRef = useRef();\r\n  const gameDevRef = useRef();\r\n  const imageRef = useRef();\r\n  const { user } = useAuth();\r\n  const imageURL = {\r\n    url: \"\",\r\n  };\r\n\r\n  async function checkIfInputHasValue() {\r\n    const titleValue = gameTitleRef.current.value;\r\n    const descriptionValue = gameDescriptionRef.current.value;\r\n    const priceValue = gamePriceRef.current.value;\r\n    const developerValue = gameDevRef.current.value;\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n\r\n    if (gameTitleRef.current === document.activeElement) {\r\n      if (titleValue === \"\") {\r\n        dispatch({ type: \"TITLE_CLICK\" });\r\n      } else {\r\n        dispatch({ type: \"RESET\" });\r\n      }\r\n    } else if (gamePriceRef.current === document.activeElement) {\r\n      if (isNaN(priceValue)) {\r\n        dispatch({ type: \"PRICE_CLICK\" });\r\n      } else {\r\n        dispatch({ type: \"RESET\" });\r\n      }\r\n    } else if (gameDescriptionRef.current === document.activeElement) {\r\n      if (descriptionValue === \"\") {\r\n        dispatch({ type: \"DESCRIPTION_CLICK\" });\r\n      } else {\r\n        dispatch({ type: \"RESET\" });\r\n      }\r\n    } else if (gameDevRef.current === document.activeElement) {\r\n      if (developerValue === \"\") {\r\n        dispatch({ type: \"DEVELOPER_CLICK\" });\r\n      } else {\r\n        dispatch({ type: \"RESET\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  const getImageFile = (e) => {\r\n    //Image extension validation - if not .png, throw an error, else upload image and add the game into the database\r\n    const file = e.target.files[0];\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    setFileState(file);\r\n    if (!file.name.includes(\".png\")) {\r\n      imageRef.current.value = \"\";\r\n      setError(\"Image is not the correct format.\");\r\n      setFileState(null);\r\n    }\r\n  };\r\n\r\n  async function handleUpload(e) {\r\n    const title = gameTitleRef.current.value;\r\n    const description = gameDescriptionRef.current.value;\r\n    const price = gamePriceRef.current.value;\r\n    const developer = gameDevRef.current.value;\r\n    const image = imageRef.current.value;\r\n\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    setIsLoading(true);\r\n    if (\r\n      title !== \"\" &&\r\n      description !== \"\" &&\r\n      price !== \"\" &&\r\n      developer !== \"\" &&\r\n      image !== \"\"\r\n    ) {\r\n      const { data } = await supabase.storage\r\n        .from(\"card-images\")\r\n        .upload(`images/${fileState.name}`, fileState);\r\n\r\n      const { publicURL } = supabase.storage\r\n        .from(\"card-images\")\r\n        .getPublicUrl(`images/${fileState.name}`);\r\n      imageURL.url = publicURL;\r\n\r\n      const { error } = await supabase.from(\"games\").upsert({\r\n        uploaded_by: user?.id,\r\n        image_url: imageURL.url,\r\n        title: title,\r\n        description: description,\r\n        price: price,\r\n        developer: developer,\r\n      });\r\n\r\n      //If everything is filled and the checks are fine, upload and clear inputs\r\n      gameTitleRef.current.value = \"\";\r\n      gameDescriptionRef.current.value = \"\";\r\n      gamePriceRef.current.value = \"\";\r\n      gameDevRef.current.value = \"\";\r\n      imageRef.current.value = \"\";\r\n      setError(\"\");\r\n      setSuccess(\"Game was uploaded successfully!\");\r\n      setIsLoading(false);\r\n    } else {\r\n      setError(\"Please fill out all the fields!\");\r\n      setIsLoading(false);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"upload-container\">\r\n        <div className=\"form-container\">\r\n          <form className=\"upload-form\">\r\n            <div className=\"form-header\">Upload a game</div>\r\n            {error || success ? (\r\n              <div className=\"notification-handling\">\r\n                <div className={success ? \"success\" : \"error\"}>\r\n                  {success ? success : error}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n\r\n            <InputField\r\n              className=\"upload-input\"\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              ref={gameTitleRef}\r\n              hasError={state.titleHasError}\r\n              isFocused={state.titleIsFocused}\r\n              onClick={checkIfInputHasValue}\r\n              onChange={checkIfInputHasValue}\r\n              errorText={state.titleErrorText}\r\n            />\r\n\r\n            <InputField\r\n              type=\"file\"\r\n              accept=\"image/png\"\r\n              ref={imageRef}\r\n              onChange={getImageFile}\r\n            />\r\n            <TextAreaField\r\n              className=\"upload-input\"\r\n              placeholder=\"Description\"\r\n              ref={gameDescriptionRef}\r\n              hasError={state.descriptionHasError}\r\n              isFocused={state.descriptionIsFocused}\r\n              onClick={checkIfInputHasValue}\r\n              onChange={checkIfInputHasValue}\r\n              errorText={state.descriptionErrorText}\r\n            />\r\n            <InputField\r\n              className=\"upload-input\"\r\n              type=\"text\"\r\n              placeholder=\"Price\"\r\n              ref={gamePriceRef}\r\n              hasError={state.priceHasError}\r\n              isFocused={state.priceIsFocused}\r\n              onClick={checkIfInputHasValue}\r\n              onChange={checkIfInputHasValue}\r\n              errorText={state.priceErrorText}\r\n            />\r\n            <InputField\r\n              className=\"upload-input\"\r\n              type=\"text\"\r\n              placeholder=\"Developer\"\r\n              ref={gameDevRef}\r\n              hasError={state.developerHasError}\r\n              isFocused={state.developerIsFocused}\r\n              onClick={checkIfInputHasValue}\r\n              onChange={checkIfInputHasValue}\r\n              errorText={state.developerErrorText}\r\n            />\r\n\r\n            <Button\r\n              disabled={\r\n                isLoading ||\r\n                state.titleHasError ||\r\n                state.descriptionHasError ||\r\n                state.priceHasError ||\r\n                state.developerHasError ||\r\n                !fileState\r\n              }\r\n              onClick={handleUpload}\r\n              id=\"upload-btn\"\r\n              value={\r\n                isLoading ? <span>Uploading...</span> : <span>Upload</span>\r\n              }\r\n            />\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"upload-guidelines\">\r\n        <img src={uploadInstructions} alt=\"instructions\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"../styles/Discussions.css\";\r\nimport InputField from \"./InputField\";\r\n\r\nfunction Discussions() {\r\n  const inputRef = useRef();\r\n  const [error, setError] = useState();\r\n  const [errorText, setErrorText] = useState();\r\n  const [focused, setFocused] = useState();\r\n\r\n  async function checkIfInputHasValue() {\r\n    const inputValue = inputRef.current.value;\r\n    let errors = [\r\n      {\r\n        text: \"This field is required!\",\r\n      },\r\n      {\r\n        text: \"The field can contain only letters!\",\r\n      },\r\n    ];\r\n\r\n    if (inputRef.current === document.activeElement) {\r\n      setFocused(true);\r\n      if (inputValue === \"\") {\r\n        setError(true);\r\n        setErrorText(errors[0].text);\r\n      } else if (!isNaN(+`${inputValue}`)) {\r\n        setError(true);\r\n        setErrorText(errors[1].text);\r\n      } else {\r\n        setError(false);\r\n        setFocused(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"discussions-page\">\r\n      <InputField\r\n        className=\"test-input\"\r\n        placeholder=\"Input 1\"\r\n        ref={inputRef}\r\n        hasError={error}\r\n        isFocused={focused}\r\n        onClick={checkIfInputHasValue}\r\n        onChange={checkIfInputHasValue}\r\n        errorText={errorText}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Discussions;\r\n","import \"./App.css\";\nimport { supabase } from \"./supabase\";\nimport { Provider } from \"react-supabase\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  HashRouter,\n} from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./components/HomePage\";\nimport AuthLogin from \"./components/AuthLogin\";\nimport AuthRegister from \"./components/AuthRegister\";\nimport Games from \"./components/Games\";\nimport AuthProvider from \"./auth/AuthProvider\";\nimport Dashboard from \"./components/Dashboard\";\nimport Upload from \"./components/Upload\";\nimport Discussions from \"./components/Discussions\";\n\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <AuthProvider>\n          <Provider value={supabase}>\n            <Switch>\n              <NavBar />\n            </Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/login\" component={AuthLogin} />\n            <Route path=\"/register\" component={AuthRegister} />\n            <Route exact path=\"/games\" component={Games} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/discussions\" component={Discussions} />\n            <Route path=\"/upload\" component={Upload} />\n          </Provider>\n        </AuthProvider>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}