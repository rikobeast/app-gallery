{"version":3,"sources":["supabase.js","auth/AuthProvider.js","components/NavBar.js","components/HomePage.js","components/AuthLogin.js","components/AuthRegister.js","components/Card.js","components/Games.js","components/DashboardSettings.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","process","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","session","auth","onAuthStateChange","event","a","listener","data","unsubscribe","value","signUp","signIn","signOut","Provider","NavBar","isLogged","setIsLogged","history","useHistory","push","console","log","id","className","to","onClick","HomePage","AuthLogin","error","setError","emailRef","useRef","passwordRef","e","preventDefault","email","current","password","message","onSubmit","type","placeholder","ref","required","disabled","AuthRegister","confirmPasswordRef","confirmedPassword","Card","props","title","desc","price","developer","GameCardDisplay","DashboardSettings","success","setSuccess","usernameRef","fnameRef","lnameRef","websiteRef","username","fname","lname","website","from","upsert","first_name","last_name","Dashboard","App","exact","path","component","Games","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28593499.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_PUBLIC_ANON_KEY\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n","import React, { useContext, useState, useEffect} from 'react'\r\nimport { supabase } from '../supabase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nfunction AuthProvider({children}) {\r\n    const [user,setUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const session = supabase.auth.session()\r\n\r\n        setUser(session?.user ?? null)\r\n        setLoading(false)\r\n\r\n        const { data: listener } = supabase.auth.onAuthStateChange(\r\n            async (event, session) => {\r\n                setUser(session?.user ?? null)\r\n                setLoading(false)\r\n            }\r\n        )\r\n        return () => {\r\n            listener?.unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const value = {\r\n        signUp: (data) => supabase.auth.signUp(data),\r\n        signIn: (data) => supabase.auth.signIn(data),\r\n        signOut: () => supabase.auth.signOut(),\r\n        user,\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthProvider\r\n","import React, {useState,useEffect} from 'react'\r\nimport { Switch, Link, useHistory} from 'react-router-dom'\r\nimport '../styles/navbar.css'\r\nimport {useAuth} from '../auth/AuthProvider'\r\n\r\n\r\nfunction NavBar() {\r\n    const {user, signOut} = useAuth()\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const history = useHistory()\r\n\r\n\r\n    async function handleLogout() {\r\n        await signOut()\r\n        history.push('/login')\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n            setIsLogged(true)\r\n            console.log(user?.id)\r\n        } else {\r\n            setIsLogged(false)\r\n            console.log(user?.id)\r\n        }\r\n    },[user])\r\n\r\n    return (\r\n        <Switch>\r\n            <div className=\"navigation\">\r\n                <div className=\"left-nav\">\r\n                    {isLogged ? \r\n                    <ul className=\"navbits\">\r\n                        <li><Link id=\"nav-option\" to=\"/app-gallery\">Home</Link></li>\r\n                        <li><Link id=\"nav-option\" to=\"/games\">Games</Link></li>\r\n                        <li><Link id=\"nav-option\" to=\"/upload\">Upload</Link></li>\r\n                        <li><Link id=\"nav-option\" to=\"/discussions\">Discussions</Link></li> \r\n                    </ul> : \r\n                    <ul className=\"navbits\">\r\n                        <li><Link id=\"nav-option\" to=\"/app-gallery\">Home</Link></li>\r\n                        <li><Link id=\"nav-option\" to=\"/games\">Games</Link></li>\r\n                        <li><Link id=\"nav-option\" to=\"/discussions\">Discussions</Link></li> \r\n                    </ul>\r\n                    }\r\n            </div>\r\n                    {// if the user is logged in, replace the Login and Register buttons with their corresponding ones.   \r\n                    isLogged ?  \r\n                   \r\n                        <div className=\"right-nav\">\r\n                             <ul className=\"navbits\">\r\n                                <li><Link id=\"nav-option\" to=\"/dashboard\">Account</Link></li>\r\n                                <li><Link id=\"nav-option\" onClick={handleLogout} to=\"\">Log out</Link></li>     \r\n                            </ul>\r\n                        </div>  : \r\n                        <div className=\"right-nav\">\r\n                             <ul className=\"navbits\">\r\n                                <li><Link id=\"nav-option\" to=\"/login\">Login</Link></li>\r\n                                <li><Link id=\"nav-option\" to=\"/register\">Register</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                    }                \r\n        </div>\r\n        </Switch>\r\n        \r\n    )\r\n}\r\nexport default NavBar\r\n","import React from 'react'\r\nimport '../styles/page-content.css'\r\n\r\nfunction HomePage() {\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"welcome-container\">\r\n                <h1>Welcome to App Gallery!</h1>\r\n                <p id=\"desc\">If you are a game-dev enthusiast, this is the best place for you to upload and promote your games!</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React, {useState,useRef} from 'react'\r\nimport '../styles/auth.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../auth/AuthProvider'\r\n\r\nfunction AuthLogin() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const { signIn } = useAuth()\r\n    const history = useHistory()\r\n    \r\n   async function handleSubmit(e){\r\n        e.preventDefault()\r\n        \r\n        const email = emailRef.current.value\r\n        const password = passwordRef.current.value\r\n\r\n            setLoading(true)\r\n            setError('')\r\n\r\n            const {error} = await signIn({email,password})\r\n            if (error){\r\n                setError(error.message)\r\n            } else {\r\n                history.push('/app-gallery')\r\n            }\r\n    \r\n        setLoading(false)\r\n   }\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"login-container\">\r\n                <h2 id=\"heading\">Log in</h2>\r\n                <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"error\">{error}</div>\r\n                    <input type=\"email\" className=\"username\" placeholder=\"Email\" ref={emailRef} required></input>\r\n                    <input type=\"password\" className=\"password\" placeholder=\"Password\" ref={passwordRef} required></input>\r\n                    <button id=\"auth-button\" disabled={loading} type=\"submit\">{loading? <span>Loading...</span> : <span>Log in</span>}</button>\r\n                    <Link to=\"/register\" id=\"reg-redirect\">Don't have an account? Register here.</Link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthLogin","import React, {useRef,useState} from 'react'\r\nimport '../styles/auth.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {useAuth} from '../auth/AuthProvider'\r\n\r\nfunction AuthRegister() {\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const confirmPasswordRef = useRef()\r\n    const history = useHistory()\r\n    const { signUp } = useAuth()\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        const email = emailRef.current.value\r\n        const password = passwordRef.current.value\r\n        const confirmedPassword = confirmPasswordRef.current.value\r\n\r\n        if (password !== confirmedPassword) {\r\n            return setError(\"Passwords do not match.\")\r\n        }\r\n\r\n            setLoading(true)\r\n            setError('')\r\n\r\n            const {error} = await signUp({\r\n                email: email,\r\n                password: password,\r\n              })\r\n            \r\n            if (error) {\r\n\r\n                setError(error.message)\r\n\r\n            } else {\r\n\r\n                history.push(\"/app-gallery\")\r\n\r\n            }\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"register-page\">\r\n            <div className=\"register-container\">\r\n                <h2 id=\"heading\">Create an account</h2>\r\n                <form className=\"register-form\" onSubmit={handleSubmit}>\r\n                    <div className=\"error\">{error}</div>\r\n                    <input type=\"email\" className=\"email\" placeholder=\"Email\" ref={emailRef} required></input>\r\n                    <input type=\"password\" className=\"password\" placeholder=\"Password\" ref={passwordRef} required></input>\r\n                    <input type=\"password\" className=\"password-confirm\" placeholder=\"Confirm password\" ref={confirmPasswordRef} required></input>\r\n                    <button id=\"auth-button\" disabled={loading} type=\"submit\">{loading ? <span>Loading...</span> : <span>Sign in</span>}</button>\r\n                    <Link to=\"/login\" id=\"reg-redirect\" >Already have an account? Log in.</Link>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRegister","import React from 'react'\r\nimport '../styles/game-card.css'\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className='card'>\r\n            <div className='card-info'>\r\n                <h3 id='card-title'>{props.title}</h3>\r\n                <small id='card-description'>{props.desc}</small>\r\n                <p id='card-item-price'>{props.price}</p>\r\n                <p id='card-item-developer'>{props.developer}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from './Card'\r\nimport '../styles/game-card.css'\r\n\r\n\r\nfunction GameCardDisplay() {\r\n    return (<>\r\n        <div className='game-display-page'>\r\n            <div className='content-page'>\r\n            <Card title='World of Wacraft' \r\n                      desc='One of the best MMORPGs ever created!' \r\n                      price='100.00$' \r\n                      developer='Blizzard entertainment'/>\r\n            <Card title='World of Wacraft' \r\n                      desc='One of the best MMORPGs ever created!' \r\n                      price='100.00$' \r\n                      developer='Blizzard entertainment'/>\r\n            <Card title='World of Wacraft' \r\n                      desc='One of the best MMORPGs ever created!' \r\n                      price='100.00$' \r\n                      developer='Blizzard entertainment'/>\r\n            <Card title='World of Wacraft' \r\n                      desc='One of the best MMORPGs ever created!' \r\n                      price='100.00$' \r\n                      developer='Blizzard entertainment'/>\r\n            <Card title='World of Wacraft' \r\n                      desc='One of the best MMORPGs ever created!' \r\n                      price='100.00$' \r\n                      developer='Blizzard entertainment'/>\r\n            <Card title='World of Wacraft' \r\n                      desc='One of the best MMORPGs ever created!' \r\n                      price='100.00$' \r\n                      developer='Blizzard entertainment'/>\r\n            <Card title='World of Wacraft' \r\n                      desc='One of the best MMORPGs ever created!' \r\n                      price='100.00$' \r\n                      developer='Blizzard entertainment'/>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameCardDisplay\r\n","import React,{useState,useRef} from 'react'\r\nimport '../styles/dashboard.css'\r\nimport {supabase} from '../supabase'\r\nimport {useAuth} from '../auth/AuthProvider'\r\n\r\nfunction DashboardSettings() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [success, setSuccess] = useState('')\r\n    const usernameRef = useRef()\r\n    const fnameRef = useRef()\r\n    const lnameRef = useRef()\r\n    const websiteRef = useRef()\r\n    const {user} = useAuth()\r\n\r\n    async function updateProfile(){\r\n        \r\n        const username = usernameRef.current.value;\r\n        const fname = fnameRef.current.value;\r\n        const lname = lnameRef.current.value;\r\n        const website = websiteRef.current.value;\r\n\r\n        setLoading(true)\r\n\r\n        const {data,error} = await supabase\r\n        .from('profiles')\r\n        .upsert({id: user?.id, \r\n            username: username, \r\n            first_name: fname, \r\n            last_name: lname, \r\n            website: website})\r\n\r\n        if(error){\r\n            setLoading(false)\r\n            setError(error.message)\r\n        } else {\r\n            setLoading(false)\r\n            setSuccess('Changes saved successfully.')\r\n        }\r\n    }   \r\n\r\n    return (\r\n        <div className=\"dashboard-content\">\r\n            <div className=\"error\">{error}</div>\r\n            <div className=\"success\">{success}</div>\r\n            <div className=\"container\">\r\n                \r\n               <div className=\"header\">\r\n                   <label>General</label>\r\n               </div>\r\n               <div className=\"sub-header\">\r\n                   <div className=\"sub-header-content\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\" id=\"username\" ref={usernameRef}></input>\r\n                    </div>\r\n                   <div className=\"sub-header-content\">\r\n                        <label>First name</label>\r\n                        <input type=\"text\" id=\"fname\" ref={fnameRef}></input>\r\n                    </div>\r\n                   <div className=\"sub-header-content\">\r\n                        <label>Last name</label>\r\n                        <input type=\"text\" id=\"lname\" ref={lnameRef}></input>\r\n                    </div>\r\n                   <div className=\"sub-header-content\">\r\n                        <label>Website</label>\r\n                        <input type=\"text\" id=\"website\" ref={websiteRef}></input>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n            <div className=\"container\">\r\n               <div className=\"header\">\r\n                   <label>Security</label>\r\n               </div>\r\n               <div className=\"sub-header\">\r\n                   <div className=\"sub-header-content\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" id=\"password\"></input>\r\n                    </div>\r\n                   <div className=\"sub-header-content\">\r\n                        <label>Confirm new password</label>\r\n                        <input type=\"password\" id=\"c-password\"></input>\r\n                    </div>\r\n               </div>\r\n            </div>\r\n            <div className=\"button-container\">\r\n                <button onClick={updateProfile} id=\"save-btn\">Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardSettings\r\n","import React from 'react'\r\nimport '../styles/dashboard.css'\r\nimport DashboardSettings from './DashboardSettings'\r\n\r\nfunction Dashboard() {\r\n    return (\r\n        <div className=\"account-page\">\r\n            <div className=\"profile-container\">\r\n               <div className=\"avatar-container\">\r\n                   <div className=\"avatar\">\r\n                        \r\n                   </div>\r\n               </div>\r\n               <div className=\"user-info\">\r\n                   <div className=\"names\">\r\n                       <p>Test Test</p>\r\n                   </div>\r\n               </div>              \r\n            </div>\r\n            <DashboardSettings/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import './App.css';\nimport { Provider } from 'react-supabase'\nimport { BrowserRouter as Router,Route } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport HomePage from './components/HomePage';\nimport AuthLogin from './components/AuthLogin';\nimport AuthRegister from './components/AuthRegister';\nimport Games from './components/Games';\nimport { supabase } from './supabase';\nimport AuthProvider from './auth/AuthProvider';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  return (\n  <>\n  <Router>\n  <AuthProvider>\n      <Provider value={supabase}>\n        <NavBar/>\n          <Route exact path=\"/app-gallery\" component={HomePage}/>\n            <Route path=\"/login\" component={AuthLogin}/>\n            <Route path=\"/register\" component={AuthRegister}/>\n            <Route path=\"/games\" component={Games}/>\n            <Route path=\"/dashboard\" component={Dashboard}/>\n      </Provider>\n    </AuthProvider>\n  </Router>\n   \n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}