{"version":3,"sources":["supabase.js","auth/AuthProvider.js","components/Button.js","images/GGA Logo.svg","components/NavBar.js","images/bgImage.jpg","components/HomePage.js","components/InputField.js","components/AuthLogin.js","components/AuthRegister.js","components/Card.js","components/Modal/CardModal.js","components/Games.js","components/DashboardSettings.js","components/Dashboard.js","components/TextAreaField.js","images/Upload_Instructions.svg","components/Upload.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","process","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","session","auth","onAuthStateChange","event","a","listener","data","unsubscribe","value","signUp","signIn","signOut","Provider","Button","props","disabled","onClick","id","type","className","icon","NavBar","isLogged","setIsLogged","clickedItemId","setClickedItemId","click","setClick","history","useHistory","iconStyles","color","width","height","handleLogout","push","closeMobileMenu","setNavItemActive","to","src","Logo","alt","title","url","map","item","handleLogin","style","HomePage","bgImage","size","InputField","forwardRef","ref","placeholder","onChange","accept","required","validationCheckIcon","AuthLogin","error","setError","emailRef","createRef","passwordRef","e","preventDefault","email","current","password","message","onSubmit","AuthRegister","strength","setStrength","validation","setValidations","emailState","setEmailState","showPassword","setShowPassword","showConfirmedPassword","setShowConfirmedPassword","useRef","confirmPasswordRef","passwordStrength","validations","showPasswordToUser","showConfirmedPasswordToUser","checkIfPasswordsMatch","validateEmail","test","length","search","reduce","accumulatedValue","currentValue","Card","description","price","developer","URL","CardModal","openModal","setOpenModal","imageURL","desc","dev","GameCardDisplay","cards","setCards","toggle","setToggle","modalTitle","setModalTitle","modalDesc","setModalDesc","modalPrice","setModalPrice","modalUrl","setModalUrl","modalDev","setModalDev","cardArray","titles","descriptions","prices","developers","imageURLs","memoizedHandleClick","useCallback","getCardTitle","getCardDescription","getCardPrice","getCardImageURL","getCardDeveloper","from","select","index","element","t","d","p","listCards","image_url","getGames","DashboardSettings","success","setSuccess","usernameRef","fnameRef","lnameRef","websiteRef","username","fname","lname","website","upsert","first_name","last_name","Dashboard","TextAreaField","Upload","isLoading","setIsLoading","fileState","setFileState","gameTitleRef","gameDescriptionRef","gamePriceRef","gameDevRef","imageRef","image","indexOf","storage","upload","name","getPublicUrl","publicURL","uploaded_by","file","target","files","includes","uploadInstructions","App","exact","path","component","Games","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91f9234e.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_PUBLIC_ANON_KEY\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n","import React, { useContext, useState, useEffect} from 'react'\r\nimport { supabase } from '../supabase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nfunction AuthProvider({children}) {\r\n    const [user,setUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const session = supabase.auth.session()\r\n\r\n        setUser(session?.user ?? null)\r\n        setLoading(false)\r\n\r\n        const { data: listener } = supabase.auth.onAuthStateChange(\r\n            async (event, session) => {\r\n                setUser(session?.user ?? null)\r\n                setLoading(false)\r\n            }\r\n        )\r\n        return () => {\r\n            listener?.unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const value = {\r\n        signUp: (data) => supabase.auth.signUp(data),\r\n        signIn: (data) => supabase.auth.signIn(data),\r\n        signOut: () => supabase.auth.signOut(),\r\n        user,\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthProvider\r\n","import React from \"react\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <button\r\n      disabled={props.disabled}\r\n      onClick={props.onClick}\r\n      id={props.id}\r\n      type={props.type}\r\n      className={props.className}\r\n    >\r\n      {props.value}\r\n      {props.icon}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/GGA Logo.e8635831.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport { AiOutlineMenu } from \"react-icons/ai\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport Button from \"./Button\";\r\nimport Logo from \"../images/GGA Logo.svg\";\r\n\r\nfunction NavBar() {\r\n  const { user, signOut } = useAuth();\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [clickedItemId, setClickedItemId] = useState();\r\n  const [click, setClick] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const navItems = [\r\n    {\r\n      id: 0,\r\n      title: \"Games\",\r\n      url: \"/games\",\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"Discussions\",\r\n      url: \"/discussions\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Upload\",\r\n      url: \"/upload\",\r\n    },\r\n  ];\r\n\r\n  let iconStyles = {\r\n    color: \"white\",\r\n    width: \"40\",\r\n    height: \"40\",\r\n  };\r\n\r\n  async function handleLogout() {\r\n    await signOut();\r\n    history.push(\"/login\");\r\n  }\r\n  async function handleLogin() {\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  async function handleClick() {\r\n    setClick(!click);\r\n  }\r\n  async function closeMobileMenu() {\r\n    setClick(true);\r\n  }\r\n  async function setNavItemActive(id) {\r\n    setClickedItemId(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setIsLogged(true);\r\n    } else {\r\n      setIsLogged(false);\r\n    }\r\n  }, [user, clickedItemId]);\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"logo\">\r\n        <Link onClick={setNavItemActive} id=\"logo\" to=\"/\">\r\n          <img src={Logo} alt=\"Back to homepage\" />\r\n        </Link>\r\n      </div>\r\n      {\r\n        <div className=\"web-nav\">\r\n          <div className=\"nav-links\">\r\n            {navItems.map((item) => (\r\n              <div key={item.id} className=\"nav-item\">\r\n                <Link\r\n                  onClick={() => {\r\n                    setNavItemActive(item.id);\r\n                  }}\r\n                  id={clickedItemId === item.id ? \"option-active\" : \"option\"}\r\n                  to={`${item.url}`}\r\n                >\r\n                  {item.title}\r\n                </Link>\r\n                <div\r\n                  className={clickedItemId === item.id ? \"active\" : null}\r\n                ></div>\r\n              </div>\r\n            ))}\r\n            {isLogged ? (\r\n              <div className=\"nav-item\">\r\n                <Link onClick={setNavItemActive} id=\"option\" to=\"/dashboard\">\r\n                  Account\r\n                </Link>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      }\r\n      {isLogged ? (\r\n        <div className=\"btn-container\">\r\n          <Button\r\n            id=\"logout-btn\"\r\n            onClick={() => {\r\n              handleLogout();\r\n              setNavItemActive();\r\n            }}\r\n            value=\"Log out\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"btn-container\">\r\n          <Button\r\n            id=\"login-btn\"\r\n            onClick={() => {\r\n              handleLogin();\r\n              setNavItemActive();\r\n            }}\r\n            value=\"Log in\"\r\n          />\r\n        </div>\r\n      )}\r\n      <div className=\"mobile-nav\">\r\n        <div className=\"hamburger-menu\" onClick={handleClick}>\r\n          {click ? (\r\n            <AiOutlineMenu style={iconStyles} />\r\n          ) : (\r\n            <AiOutlineClose style={iconStyles} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={click ? \"nav-menu\" : \"nav-menu active\"}>\r\n        {isLogged ? (\r\n          <div className=\"menu\">\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/games\">\r\n              Games\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/discussions\">\r\n              Discussions\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/upload\">\r\n              Upload\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/dashboard\">\r\n              Account\r\n            </Link>\r\n            <Link\r\n              onClick={() => {\r\n                handleLogout();\r\n                closeMobileMenu();\r\n              }}\r\n              id=\"logout-btn-m\"\r\n              to=\"/login\"\r\n            >\r\n              Log out\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"menu\">\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/games\">\r\n              Games\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/discussions\">\r\n              Discussions\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/register\">\r\n              Sign up\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"login-btn-m\" to=\"/login\">\r\n              Log in\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/bgImage.99dc8eaf.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport \"../styles/HomePage.css\";\r\nimport bgImage from \"../images/bgImage.jpg\";\r\nimport { BsArrowRight } from \"react-icons/bs\";\r\n\r\nfunction HomePage() {\r\n  const history = useHistory();\r\n  const { user } = useAuth();\r\n  const [isLogged, setIsLogged] = useState(false);\r\n\r\n  async function handleClick() {\r\n    history.push(\"/register\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    user ? setIsLogged(true) : setIsLogged(false);\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"welcome-message-m\">\r\n        <h1>Game Gallery</h1>\r\n        <span>\r\n          If you are a game-dev enthusiast, this is the place for you to promote\r\n          your games!\r\n        </span>\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <div className=\"content-container\">\r\n          <div className=\"welcome-message\">\r\n            <h1>Game Gallery</h1>\r\n            <span>\r\n              If you are a game-dev enthusiast, this is the place for you to\r\n              promote your games!\r\n            </span>\r\n          </div>\r\n          <div className=\"top-highlight\"></div>\r\n          <div className=\"bottom-highlight\"></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"image-wrapper\">\r\n        <img src={bgImage} alt=\"\" />\r\n        {!isLogged ? (\r\n          <Button\r\n            onClick={handleClick}\r\n            id=\"sign-up\"\r\n            value=\"Sign up\"\r\n            icon={<BsArrowRight size=\"20\" />}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nconst InputField = forwardRef((props, ref) => (\r\n  <>\r\n    <div className=\"input-container\">\r\n      {props.value ? <label>{props.value}</label> : null}\r\n      <input\r\n        style={props.style}\r\n        className={props.className}\r\n        placeholder={props.placeholder}\r\n        ref={ref}\r\n        type={props.type}\r\n        onChange={props.onChange}\r\n        accept={props.accept}\r\n        required\r\n      />\r\n      {props.icon ? (\r\n        <span onClick={props.onClick} className=\"toggle-visible\">\r\n          {props.icon}\r\n        </span>\r\n      ) : null}\r\n      {props.validationCheckIcon ? (\r\n        <span className=\"validation-check\">{props.validationCheckIcon}</span>\r\n      ) : null}\r\n    </div>\r\n  </>\r\n));\r\n\r\nexport default InputField;\r\n","import React, { useState, createRef } from \"react\";\r\nimport \"../styles/Auth.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport Button from \"./Button\";\r\nimport InputField from \"./InputField\";\r\n\r\nfunction AuthLogin() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const emailRef = createRef();\r\n  const passwordRef = createRef();\r\n  const { signIn } = useAuth();\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    const { error } = await signIn({ email, password });\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <div id=\"heading\">Log in</div>\r\n        <div className={error ? \"error\" : null}>{error}</div>\r\n        <form className=\"login-form\" onSubmit={handleSubmit}>\r\n          <InputField\r\n            className=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            ref={emailRef}\r\n          />\r\n          <InputField\r\n            className=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            ref={passwordRef}\r\n          />\r\n          <Button\r\n            id=\"auth-button\"\r\n            disabled={loading}\r\n            type=\"submit\"\r\n            value={loading ? <span>Loading...</span> : <span>Log in</span>}\r\n          />\r\n          <Link to=\"/register\" id=\"reg-redirect\">\r\n            Don't have an account? Register here.\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthLogin;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport \"../styles/Auth.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport InputField from \"./InputField\";\r\nimport { IoIosClose } from \"react-icons/io\";\r\nimport { IoIosCheckmark } from \"react-icons/io\";\r\nimport { BiShow } from \"react-icons/bi\";\r\nimport { BiHide } from \"react-icons/bi\";\r\n\r\nfunction AuthRegister() {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [strength, setStrength] = useState();\r\n  const [validation, setValidations] = useState([]);\r\n  const [emailState, setEmailState] = useState();\r\n  const [showPassword, setShowPassword] = useState();\r\n  const [showConfirmedPassword, setShowConfirmedPassword] = useState();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const confirmPasswordRef = useRef();\r\n  const history = useHistory();\r\n  const { signUp } = useAuth();\r\n\r\n  let passwordStrength = 0;\r\n  let validations = [];\r\n\r\n  function showPasswordToUser() {\r\n    setShowPassword(!showPassword);\r\n  }\r\n  function showConfirmedPasswordToUser() {\r\n    setShowConfirmedPassword(!showConfirmedPassword);\r\n  }\r\n  function checkIfPasswordsMatch() {\r\n    const password = passwordRef.current.value;\r\n    const confirmedPassword = confirmPasswordRef.current.value;\r\n    if (password !== confirmedPassword) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function validateEmail() {\r\n    const regex =\r\n      /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    setError(\"\");\r\n    setEmailState(emailRef.current.value);\r\n    if (regex.test(emailState) === false) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  async function validatePassword() {\r\n    const password = passwordRef.current.value;\r\n\r\n    validations = [\r\n      password.length >= 8,\r\n      password.search(/[A-Z]/) > -1,\r\n      password.search(/[0-9]/) > -1,\r\n      password.search(/[!%$&+,:;=?@#]/) > -1,\r\n    ];\r\n    passwordStrength = validations.reduce(\r\n      (accumulatedValue, currentValue) => accumulatedValue + currentValue\r\n    );\r\n    setStrength(passwordStrength);\r\n    setValidations(validations);\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    const confirmedPassword = confirmPasswordRef.current.value;\r\n    setLoading(true);\r\n    setError(\"\");\r\n    validateEmail();\r\n\r\n    if (!checkIfPasswordsMatch()) {\r\n      setLoading(false);\r\n      return setError(\"Passwords do not match.\");\r\n    }\r\n    if (!validateEmail()) {\r\n      setLoading(false);\r\n      return setError(\"Invalid email.\");\r\n    }\r\n\r\n    if (strength < 4) {\r\n      setError(\"Password does not meet the requirements.\");\r\n    } else {\r\n      const { data } = await signUp({\r\n        email: email,\r\n        password: password,\r\n      });\r\n      history.push(\"/\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <div className=\"register-container\">\r\n        <div id=\"heading\">Create an account</div>\r\n        <form className=\"register-form\" onSubmit={handleSubmit}>\r\n          <div className=\"error\">{error}</div>\r\n          <InputField\r\n            type=\"email\"\r\n            className=\"email\"\r\n            placeholder=\"Email\"\r\n            ref={emailRef}\r\n            required\r\n          />\r\n          <InputField\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            className=\"password\"\r\n            placeholder=\"Password\"\r\n            ref={passwordRef}\r\n            onChange={validatePassword}\r\n            icon={\r\n              showPassword ? (\r\n                <BiHide color=\"008eda\" onClick={showPasswordToUser} />\r\n              ) : (\r\n                <BiShow color=\"008eda\" onClick={showPasswordToUser} />\r\n              )\r\n            }\r\n            required\r\n          />\r\n          <InputField\r\n            type={showConfirmedPassword ? \"text\" : \"password\"}\r\n            className=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            ref={confirmPasswordRef}\r\n            icon={\r\n              showConfirmedPassword ? (\r\n                <BiHide color=\"008eda\" onClick={showConfirmedPasswordToUser} />\r\n              ) : (\r\n                <BiShow color=\"008eda\" onClick={showConfirmedPasswordToUser} />\r\n              )\r\n            }\r\n            required\r\n          />\r\n          <div className=\"validations\">\r\n            <div>\r\n              {validation[0] ? (\r\n                <IoIosCheckmark size=\"20\" color=\"green\" />\r\n              ) : (\r\n                <IoIosClose size=\"20\" color=\"red\" />\r\n              )}\r\n              <span>Password must be at least 8 characters.</span>\r\n            </div>\r\n            <div>\r\n              {validation[1] ? (\r\n                <IoIosCheckmark size=\"20\" color=\"green\" />\r\n              ) : (\r\n                <IoIosClose size=\"20\" color=\"red\" />\r\n              )}\r\n              <span>Password must have at least one uppercase letter.</span>\r\n            </div>\r\n            <div>\r\n              {validation[2] ? (\r\n                <IoIosCheckmark size=\"20\" color=\"green\" />\r\n              ) : (\r\n                <IoIosClose size=\"20\" color=\"red\" />\r\n              )}\r\n              <span>Password must have at least one number.</span>\r\n            </div>\r\n            <div>\r\n              {validation[3] ? (\r\n                <IoIosCheckmark size=\"20\" color=\"green\" />\r\n              ) : (\r\n                <IoIosClose size=\"20\" color=\"red\" />\r\n              )}\r\n              <span>Password must have at least one special character.</span>\r\n            </div>\r\n          </div>\r\n\r\n          <Button\r\n            id=\"auth-button\"\r\n            disabled={loading}\r\n            type=\"submit\"\r\n            value={loading ? <span>Loading...</span> : <span>Sign in</span>}\r\n          />\r\n          <Link to=\"/login\" id=\"reg-redirect\">\r\n            Already have an account? Log in.\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthRegister;\r\n","import React from \"react\";\r\nimport \"../styles/Card.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\" onClick={props.onClick}>\r\n      <div className=\"card-info\">\r\n        <h3 id=\"card-title\">{props.title}</h3>\r\n        <small id=\"card-description\">{props.description}</small>\r\n        <p id=\"card-item-price\">{props.price}</p>\r\n        <p id=\"card-item-developer\">{props.developer}</p>\r\n        <img src={`${props.URL}`} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"../../styles/CardModal.css\";\r\nimport { RiCloseLine } from \"react-icons/ri\";\r\nimport Button from \"../Button\";\r\n\r\nexport const CardModal = (props) => {\r\n  let iconStyles = {\r\n    color: \"whitesmoke\",\r\n    width: \"30\",\r\n    height: \"30\",\r\n  };\r\n  const { openModal, setOpenModal } = props;\r\n\r\n  const closeModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n  return (\r\n    <>\r\n      {openModal ? (\r\n        <div className=\"card-modal\">\r\n          <div className=\"window\">\r\n            <div className=\"window-content\">\r\n              <div className=\"close-modal\">\r\n                <button className=\"close\" onClick={closeModal}>\r\n                  <RiCloseLine style={iconStyles} />\r\n                </button>\r\n              </div>\r\n              <div className=\"image-container\">\r\n                <img src={props.imageURL} alt=\"s\" />\r\n              </div>\r\n              <div className=\"card-info-container\">\r\n                <h2 className=\"title\">{props.title}</h2>\r\n                <p className=\"description\">{props.desc}</p>\r\n                <p className=\"price\">{props.price}</p>\r\n                <p className=\"developer\">{props.dev}</p>\r\n              </div>\r\n              <div className=\"button\">\r\n                <Button id=\"buy-btn\" value=\"Buy\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardModal;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { supabase } from \"../supabase\";\r\nimport { CardModal } from \"./Modal/CardModal\";\r\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\r\nimport \"../styles/Games.css\";\r\n\r\nfunction GameCardDisplay() {\r\n  const [cards, setCards] = useState();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState();\r\n  const [modalDesc, setModalDesc] = useState();\r\n  const [modalPrice, setModalPrice] = useState();\r\n  const [modalUrl, setModalUrl] = useState();\r\n  const [modalDev, setModalDev] = useState();\r\n  const cardArray = [];\r\n  const titles = [];\r\n  const descriptions = [];\r\n  const prices = [];\r\n  const developers = [];\r\n  const imageURLs = [];\r\n\r\n  const iconStyles = {\r\n    color: \"007fc4\",\r\n    width: \"50\",\r\n    height: \"50\",\r\n  };\r\n\r\n  const memoizedHandleClick = useCallback(\r\n    () => {\r\n      setToggle(true);\r\n    },\r\n    [] // Tells React to memoize regardless of arguments.\r\n  );\r\n  const getCardTitle = (title) => {\r\n    setModalTitle(title);\r\n  };\r\n  const getCardDescription = (desc) => {\r\n    setModalDesc(desc);\r\n  };\r\n  const getCardPrice = (price) => {\r\n    setModalPrice(price);\r\n  };\r\n  const getCardImageURL = (url) => {\r\n    setModalUrl(url);\r\n  };\r\n  const getCardDeveloper = (dev) => {\r\n    setModalDev(dev);\r\n  };\r\n\r\n  async function getGames() {\r\n    setLoading(true);\r\n    const { data } = await supabase.from(\"games\").select();\r\n    const { data: title } = await supabase.from(\"games\").select(\"title\");\r\n    const { data: description } = await supabase\r\n      .from(\"games\")\r\n      .select(\"description\");\r\n    const { data: price } = await supabase.from(\"games\").select(\"price\");\r\n    const { data: imageURL } = await supabase.from(\"games\").select(\"image_url\");\r\n    const { data: developer } = await supabase\r\n      .from(\"games\")\r\n      .select(\"developer\");\r\n\r\n    if (data.length === 0) {\r\n      setLoading(false);\r\n      setError(\"Sorry... There aren't any games yet.\");\r\n    } else {\r\n      for (let index = 0; index < data.length; index++) {\r\n        const element = cardArray[index];\r\n        cardArray.push(element);\r\n      }\r\n\r\n      for (var t in title) {\r\n        titles.push(title[t]);\r\n      }\r\n      for (var d in description) {\r\n        descriptions.push(description[d]);\r\n      }\r\n      for (var p in price) {\r\n        prices.push(price[p]);\r\n      }\r\n      for (var dev in developer) {\r\n        developers.push(developer[dev]);\r\n      }\r\n      for (var url in imageURL) {\r\n        imageURLs.push(imageURL[url]);\r\n      }\r\n\r\n      const listCards = cardArray.map((item, index) => (\r\n        <Card\r\n          key={index}\r\n          URL={imageURLs[index].image_url}\r\n          title={titles[index].title}\r\n          description={descriptions[index].description}\r\n          price={`${prices[index].price}$`}\r\n          developer={developers[index].developer}\r\n          onClick={() => {\r\n            memoizedHandleClick();\r\n            getCardTitle(titles[index].title);\r\n            getCardDescription(descriptions[index].description);\r\n            getCardPrice(`${prices[index].price}$`);\r\n            getCardDeveloper(developers[index].developer);\r\n            getCardImageURL(imageURLs[index].image_url);\r\n          }}\r\n        />\r\n      ));\r\n      setCards(listCards);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (!cards) {\r\n      getGames();\r\n    }\r\n  }, [modalTitle]);\r\n\r\n  return (\r\n    <>\r\n      <CardModal\r\n        title={modalTitle}\r\n        desc={modalDesc}\r\n        price={modalPrice}\r\n        imageURL={modalUrl}\r\n        dev={modalDev}\r\n        openModal={toggle}\r\n        setOpenModal={setToggle}\r\n      />\r\n      <div className=\"game-display-page\">\r\n        {loading ? (\r\n          <div className=\"loader-container\">\r\n            <div className=\"loader\">\r\n              <AiOutlineLoading3Quarters style={iconStyles} />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className={error ? \"content-error\" : \"content-page\"}>\r\n            {error ? error : cards}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GameCardDisplay;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"../styles/Dashboard.css\";\r\nimport { supabase } from \"../supabase\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport Button from \"./Button\";\r\n\r\nfunction DashboardSettings() {\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const usernameRef = useRef();\r\n  const fnameRef = useRef();\r\n  const lnameRef = useRef();\r\n  const websiteRef = useRef();\r\n  const { user } = useAuth();\r\n\r\n  async function updateProfile() {\r\n    const username = usernameRef.current.value;\r\n    const fname = fnameRef.current.value;\r\n    const lname = lnameRef.current.value;\r\n    const website = websiteRef.current.value;\r\n\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    const { error } = await supabase.from(\"profiles\").upsert({\r\n      id: user?.id,\r\n      username: username,\r\n      first_name: fname,\r\n      last_name: lname,\r\n      website: website,\r\n    });\r\n\r\n    if (error) {\r\n      setSuccess(\"\");\r\n      setError(error.message);\r\n    } else {\r\n      setError(\"\");\r\n      setSuccess(\"Changes saved successfully.\");\r\n      usernameRef.current.value = \"\";\r\n      fnameRef.current.value = \"\";\r\n      lnameRef.current.value = \"\";\r\n      websiteRef.current.value = \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-content\">\r\n      <div className=\"notification-handling\">\r\n        <div className={success ? \"success\" : null}>{success}</div>\r\n        <div className={error ? \"error\" : null}>{error}</div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <label>General</label>\r\n        </div>\r\n        <div className=\"sub-header\">\r\n          <div className=\"sub-header-content\">\r\n            <label>Username</label>\r\n            <input type=\"text\" id=\"username\" ref={usernameRef}></input>\r\n          </div>\r\n          <div className=\"sub-header-content\">\r\n            <label>First name</label>\r\n            <input type=\"text\" id=\"fname\" ref={fnameRef}></input>\r\n          </div>\r\n          <div className=\"sub-header-content\">\r\n            <label>Last name</label>\r\n            <input type=\"text\" id=\"lname\" ref={lnameRef}></input>\r\n          </div>\r\n          <div className=\"sub-header-content\">\r\n            <label>Website</label>\r\n            <input type=\"text\" id=\"website\" ref={websiteRef}></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <label>Security</label>\r\n        </div>\r\n        <div className=\"sub-header\">\r\n          <div className=\"sub-header-content\">\r\n            <label>Password</label>\r\n            <input type=\"password\" id=\"password\"></input>\r\n          </div>\r\n          <div className=\"sub-header-content\">\r\n            <label>Confirm new password</label>\r\n            <input type=\"password\" id=\"c-password\"></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"button-container\">\r\n        <Button onClick={updateProfile} id=\"save-btn\" value=\"Save\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardSettings;\r\n","import React from \"react\";\r\nimport \"../styles/Dashboard.css\";\r\nimport DashboardSettings from \"./DashboardSettings\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div className=\"account-page\">\r\n      <div className=\"profile-container\">\r\n        <div className=\"avatar-container\">\r\n          <div className=\"avatar\"></div>\r\n        </div>\r\n        <div className=\"user-info\">\r\n          <div className=\"names\">\r\n            <p>Test Test</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <DashboardSettings />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { forwardRef } from \"react\";\r\n\r\nconst TextAreaField = forwardRef((props, ref) => (\r\n  <div className=\"input-container\">\r\n    {props.value ? <label>{props.value}</label> : null}\r\n    <textarea\r\n      onChange={props.onChange}\r\n      placeholder={props.placeholder}\r\n      ref={ref}\r\n      required\r\n    />\r\n    {props.validationCheckIcon ? (\r\n      <span className=\"validation-check\">{props.validationCheckIcon}</span>\r\n    ) : null}\r\n  </div>\r\n));\r\n\r\nexport default TextAreaField;\r\n","export default __webpack_public_path__ + \"static/media/Upload_Instructions.2b83e67c.svg\";","import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"../styles/Upload.css\";\r\nimport { supabase } from \"../supabase\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport Button from \"./Button\";\r\nimport InputField from \"./InputField\";\r\nimport TextAreaField from \"./TextAreaField\";\r\nimport uploadInstructions from \"../images/Upload_Instructions.svg\";\r\nimport { IoIosClose } from \"react-icons/io\";\r\nimport { IoIosCheckmark } from \"react-icons/io\";\r\n\r\nfunction Upload() {\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [fileState, setFileState] = useState();\r\n  const gameTitleRef = useRef();\r\n  const gameDescriptionRef = useRef();\r\n  const gamePriceRef = useRef();\r\n  const gameDevRef = useRef();\r\n  const imageRef = useRef();\r\n  const { user } = useAuth();\r\n  const imageURL = {\r\n    url: \"\",\r\n  };\r\n\r\n  const getImageFile = (e) => {\r\n    //Image extension validation - if not .png, throw an error, else upload image and add the game into the database\r\n    const file = e.target.files[0];\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    setFileState(file);\r\n    if (!file.name.includes(\".png\")) {\r\n      imageRef.current.value = \"\";\r\n      setError(\"Image is not the correct format.\");\r\n    }\r\n  };\r\n\r\n  async function handleUpload(e) {\r\n    const title = gameTitleRef.current.value;\r\n    const description = gameDescriptionRef.current.value;\r\n    const price = gamePriceRef.current.value;\r\n    const developer = gameDevRef.current.value;\r\n    const image = imageRef.current.value;\r\n\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setSuccess(\"\");\r\n    setIsLoading(true);\r\n\r\n    //Input validations\r\n    if (\r\n      title !== \"\" &&\r\n      description !== \"\" &&\r\n      price !== \"\" &&\r\n      developer !== \"\" &&\r\n      image !== \"\"\r\n    ) {\r\n      if (\r\n        title.indexOf(\" \") === 0 ||\r\n        description.indexOf(\" \") === 0 ||\r\n        price.indexOf(\" \") === 0 ||\r\n        developer.indexOf(\" \") === 0\r\n      ) {\r\n        setError(\"Fields cannot start with a whitespace\");\r\n      } else {\r\n        const { data } = await supabase.storage\r\n          .from(\"card-images\")\r\n          .upload(`images/${fileState.name}`, fileState);\r\n\r\n        const { publicURL } = supabase.storage\r\n          .from(\"card-images\")\r\n          .getPublicUrl(`images/${fileState.name}`);\r\n        imageURL.url = publicURL;\r\n\r\n        const { error } = await supabase.from(\"games\").upsert({\r\n          uploaded_by: user?.id,\r\n          image_url: imageURL.url,\r\n          title: title,\r\n          description: description,\r\n          price: price,\r\n          developer: developer,\r\n        });\r\n\r\n        // Error for the price field, can be only integer values\r\n        if (error) {\r\n          setSuccess(\"\");\r\n          setError(\r\n            \"The price field cannot be empty or contain special symbols or letters!\"\r\n          );\r\n          setIsLoading(false);\r\n        } else {\r\n          //If everything is filled and the checks are fine, upload and clear inputs\r\n          gameTitleRef.current.value = \"\";\r\n          gameDescriptionRef.current.value = \"\";\r\n          gamePriceRef.current.value = \"\";\r\n          gameDevRef.current.value = \"\";\r\n          imageRef.current.value = \"\";\r\n          setError(\"\");\r\n          setSuccess(\"Game was uploaded successfully!\");\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    } else {\r\n      //Error if all or one of the fields is empty\r\n      setSuccess(\"\");\r\n      setError(\"Please fill out all the fields.\");\r\n      setIsLoading(false);\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"upload-container\">\r\n        <form className=\"upload-form\">\r\n          <div className=\"form-header\">Upload a game</div>\r\n          <div className=\"notification-handling\">\r\n            <div className={success ? \"success\" : \"error\"}>\r\n              {success ? success : error}\r\n            </div>\r\n          </div>\r\n\r\n          <InputField type=\"text\" placeholder=\"Title\" ref={gameTitleRef} />\r\n\r\n          <InputField\r\n            type=\"file\"\r\n            placeholder=\"Image\"\r\n            accept=\"image/png\"\r\n            ref={imageRef}\r\n            onChange={getImageFile}\r\n          />\r\n          <TextAreaField placeholder=\"Description\" ref={gameDescriptionRef} />\r\n          <InputField type=\"text\" placeholder=\"Price\" ref={gamePriceRef} />\r\n          <InputField type=\"text\" placeholder=\"Developer\" ref={gameDevRef} />\r\n\r\n          <Button\r\n            disabled={isLoading}\r\n            onClick={handleUpload}\r\n            id=\"upload-btn\"\r\n            value={isLoading ? <span>Uploading...</span> : <span>Upload</span>}\r\n          />\r\n        </form>\r\n      </div>\r\n      <div className=\"upload-guidelines\">\r\n        <img src={uploadInstructions} alt=\"instructions\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import \"./App.css\";\nimport { Provider } from \"react-supabase\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  HashRouter,\n} from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./components/HomePage\";\nimport AuthLogin from \"./components/AuthLogin\";\nimport AuthRegister from \"./components/AuthRegister\";\nimport Games from \"./components/Games\";\nimport { supabase } from \"./supabase\";\nimport AuthProvider from \"./auth/AuthProvider\";\nimport Dashboard from \"./components/Dashboard\";\nimport Upload from \"./components/Upload\";\n\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <AuthProvider>\n          <Provider value={supabase}>\n            <Switch>\n              <NavBar />\n            </Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/login\" component={AuthLogin} />\n            <Route path=\"/register\" component={AuthRegister} />\n            <Route exact path=\"/games\" component={Games} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/upload\" component={Upload} />\n          </Provider>\n        </AuthProvider>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}