{"version":3,"sources":["supabase.js","auth/AuthProvider.js","images/GGA Logo.svg","components/NavBar.js","components/HomePage.js","components/AuthLogin.js","components/AuthRegister.js","components/Card.js","components/Modal/CardModal.js","components/Games.js","components/DashboardSettings.js","components/Dashboard.js","components/Upload.js","App.js","reportWebVitals.js","index.js"],"names":["supabase","createClient","process","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","user","setUser","loading","setLoading","useEffect","session","auth","onAuthStateChange","event","a","listener","data","unsubscribe","value","signUp","signIn","signOut","Provider","NavBar","isLogged","setIsLogged","clickedItemId","setClickedItemId","click","setClick","history","useHistory","iconStyles","color","width","height","handleLogout","push","closeMobileMenu","setNavItemActive","id","className","onClick","to","src","Logo","alt","title","url","displayIfLogged","map","item","style","HomePage","AuthLogin","error","setError","emailRef","useRef","passwordRef","e","preventDefault","email","current","password","message","onSubmit","type","placeholder","ref","required","disabled","AuthRegister","confirmPasswordRef","confirmedPassword","Card","props","description","price","developer","URL","CardModal","openModal","setOpenModal","imageURL","desc","dev","GameCardDisplay","cards","setCards","toggle","setToggle","modalTitle","setModalTitle","modalDesc","setModalDesc","modalPrice","setModalPrice","modalUrl","setModalUrl","modalDev","setModalDev","cardArray","titles","descriptions","prices","developers","imageURLs","memoizedHandleClick","useParams","slug","useCallback","getCardTitle","getCardDescription","getCardPrice","getCardImageURL","getCardDeveloper","from","select","length","index","element","t","d","p","listCards","image_url","getGames","DashboardSettings","success","setSuccess","usernameRef","fnameRef","lnameRef","websiteRef","username","fname","lname","website","upsert","first_name","last_name","Dashboard","Upload","isLoading","setIsLoading","gameTitleRef","gameDescriptionRef","gamePriceRef","gameDevRef","file","target","files","storage","upload","name","getPublicUrl","publicURL","uploaded_by","htmlFor","onChange","App","exact","path","component","Games","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0070322.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_PUBLIC_ANON_KEY\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n","import React, { useContext, useState, useEffect} from 'react'\r\nimport { supabase } from '../supabase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nfunction AuthProvider({children}) {\r\n    const [user,setUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const session = supabase.auth.session()\r\n\r\n        setUser(session?.user ?? null)\r\n        setLoading(false)\r\n\r\n        const { data: listener } = supabase.auth.onAuthStateChange(\r\n            async (event, session) => {\r\n                setUser(session?.user ?? null)\r\n                setLoading(false)\r\n            }\r\n        )\r\n        return () => {\r\n            listener?.unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n    const value = {\r\n        signUp: (data) => supabase.auth.signUp(data),\r\n        signIn: (data) => supabase.auth.signIn(data),\r\n        signOut: () => supabase.auth.signOut(),\r\n        user,\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthProvider\r\n","export default __webpack_public_path__ + \"static/media/GGA Logo.b5f18a1e.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\nimport { AiOutlineMenu } from \"react-icons/ai\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport Logo from \"../images/GGA Logo.svg\";\r\n\r\nfunction NavBar() {\r\n  const { user, signOut } = useAuth();\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [clickedItemId, setClickedItemId] = useState();\r\n  const [click, setClick] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const navItems = [\r\n    {\r\n      id: 0,\r\n      title: \"Games\",\r\n      url: \"/games\",\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"Discussions\",\r\n      url: \"/discussions\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Upload\",\r\n      url: \"/upload\",\r\n      displayIfLogged: true,\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"Account\",\r\n      url: \"/dashboard\",\r\n      displayIfLogged: true,\r\n    },\r\n  ];\r\n\r\n  let iconStyles = {\r\n    color: \"white\",\r\n    width: \"40\",\r\n    height: \"40\",\r\n  };\r\n\r\n  async function handleLogout() {\r\n    await signOut();\r\n    history.push(\"/login\");\r\n  }\r\n\r\n  async function handleClick() {\r\n    setClick(!click);\r\n  }\r\n  async function closeMobileMenu() {\r\n    setClick(true);\r\n  }\r\n  async function setNavItemActive(id) {\r\n    setClickedItemId(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setIsLogged(true);\r\n    } else {\r\n      setIsLogged(false);\r\n    }\r\n  }, [user, clickedItemId]);\r\n\r\n  return (\r\n    <div className=\"navigation\">\r\n      <div className=\"logo\">\r\n        <Link onClick={setNavItemActive} id=\"logo\" to=\"/app-gallery\">\r\n          <img src={Logo} alt=\"Back to homepage\" />\r\n        </Link>\r\n      </div>\r\n      {\r\n        <div className=\"web-nav\">\r\n          <div className=\"nav-links\">\r\n            {navItems.map((item) => (\r\n              <div key={item.id} className=\"nav-item\">\r\n                <Link\r\n                  onClick={() => {\r\n                    setNavItemActive(item.id);\r\n                  }}\r\n                  id={clickedItemId === item.id ? \"option-active\" : \"option\"}\r\n                  to={`${item.url}`}\r\n                >\r\n                  {item.title}\r\n                </Link>\r\n                <div\r\n                  className={clickedItemId === item.id ? \"active\" : null}\r\n                ></div>\r\n              </div>\r\n            ))}\r\n            <div className=\"nav-item\">\r\n              <Link onClick={setNavItemActive} id=\"option\" to=\"/register\">\r\n                Sign Up\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        /* <div className=\"web-nav\">\r\n        {isLogged ? (\r\n          <div className=\"nav-links\">\r\n            <Link id=\"option\" to=\"/games\">\r\n              Games\r\n            </Link>\r\n            <Link id=\"option\" to=\"/discussions\">\r\n              Discussions\r\n            </Link>\r\n            <Link id=\"option\" to=\"/upload\">\r\n              Upload\r\n            </Link>\r\n            <Link id=\"option\" to=\"/dashboard\">\r\n              Account\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"nav-links\">\r\n            <Link id=\"option\" to=\"/games\">\r\n              Games\r\n            </Link>\r\n            <Link id=\"option\" to=\"/discussions\">\r\n              Discussions\r\n            </Link>\r\n            <Link id=\"option\" to=\"/register\">\r\n              Sign up\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>  */\r\n      }\r\n      {isLogged ? (\r\n        <div className=\"btn-container\">\r\n          <Link id=\"logout-btn\" to=\"/login\" onClick={handleLogout}>\r\n            Log out\r\n          </Link>\r\n        </div>\r\n      ) : (\r\n        <div className=\"btn-container\">\r\n          <Link id=\"login-btn\" to=\"/login\">\r\n            Log in\r\n          </Link>\r\n        </div>\r\n      )}\r\n      <div className=\"mobile-nav\">\r\n        <div className=\"hamburger-menu\" onClick={handleClick}>\r\n          {click ? (\r\n            <AiOutlineMenu style={iconStyles} />\r\n          ) : (\r\n            <AiOutlineClose style={iconStyles} />\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={click ? \"nav-menu\" : \"nav-menu active\"}>\r\n        {isLogged ? (\r\n          <div className=\"menu\">\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/games\">\r\n              Games\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/discussions\">\r\n              Discussions\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/upload\">\r\n              Upload\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/dashboard\">\r\n              Account\r\n            </Link>\r\n            <Link\r\n              onClick={() => {\r\n                handleLogout();\r\n                closeMobileMenu();\r\n              }}\r\n              id=\"logout-btn-m\"\r\n              to=\"/login\"\r\n            >\r\n              Log out\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"menu\">\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/games\">\r\n              Games\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/discussions\">\r\n              Discussions\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"m-option\" to=\"/register\">\r\n              Sign up\r\n            </Link>\r\n            <Link onClick={closeMobileMenu} id=\"login-btn-m\" to=\"/login\">\r\n              Log in\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"../styles/HomePage.css\";\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"page-header\">\r\n        <h2 className=\"welcome-msg\">\r\n          Welcome to <span id=\"app-name\">Game Gallery!</span>\r\n        </h2>\r\n        <span className=\"description\">\r\n          If you are a game-dev enthusiast, this is the place for you to promote\r\n          your games!\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"../styles/Auth.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\n\r\nfunction AuthLogin() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const { signIn } = useAuth();\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    const { error } = await signIn({ email, password });\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      history.push(\"/app-gallery\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"login-container\">\r\n        <h2 id=\"heading\">Log in</h2>\r\n        <div className={error ? \"error\" : null}>{error}</div>\r\n        <form className=\"login-form\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"email\"\r\n            className=\"username\"\r\n            placeholder=\"Email\"\r\n            ref={emailRef}\r\n            required\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            className=\"password\"\r\n            placeholder=\"Password\"\r\n            ref={passwordRef}\r\n            required\r\n          ></input>\r\n          <button id=\"auth-button\" disabled={loading} type=\"submit\">\r\n            {loading ? <span>Loading...</span> : <span>Log in</span>}\r\n          </button>\r\n          <Link to=\"/register\" id=\"reg-redirect\">\r\n            Don't have an account? Register here.\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthLogin;\r\n","import React, { useRef, useState } from \"react\";\r\nimport \"../styles/Auth.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\n\r\nfunction AuthRegister() {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const confirmPasswordRef = useRef();\r\n  const history = useHistory();\r\n  const { signUp } = useAuth();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    const confirmedPassword = confirmPasswordRef.current.value;\r\n\r\n    if (password !== confirmedPassword) {\r\n      return setError(\"Passwords do not match.\");\r\n    }\r\n\r\n    setLoading(true);\r\n    setError(\"\");\r\n\r\n    const { error } = await signUp({\r\n      email: email,\r\n      password: password,\r\n    });\r\n\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      history.push(\"/app-gallery\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <div className=\"register-container\">\r\n        <h2 id=\"heading\">Create an account</h2>\r\n        <form className=\"register-form\" onSubmit={handleSubmit}>\r\n          <div className=\"error\">{error}</div>\r\n          <input\r\n            type=\"email\"\r\n            className=\"email\"\r\n            placeholder=\"Email\"\r\n            ref={emailRef}\r\n            required\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            className=\"password\"\r\n            placeholder=\"Password\"\r\n            ref={passwordRef}\r\n            required\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            className=\"password-confirm\"\r\n            placeholder=\"Confirm password\"\r\n            ref={confirmPasswordRef}\r\n            required\r\n          ></input>\r\n          <button id=\"auth-button\" disabled={loading} type=\"submit\">\r\n            {loading ? <span>Loading...</span> : <span>Sign in</span>}\r\n          </button>\r\n          <Link to=\"/login\" id=\"reg-redirect\">\r\n            Already have an account? Log in.\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthRegister;\r\n","import React from \"react\";\r\nimport \"../styles/Card.css\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\" onClick={props.onClick}>\r\n      <div className=\"card-info\">\r\n        <h3 id=\"card-title\">{props.title}</h3>\r\n        <small id=\"card-description\">{props.description}</small>\r\n        <p id=\"card-item-price\">{props.price}</p>\r\n        <p id=\"card-item-developer\">{props.developer}</p>\r\n        <img src={`${props.URL}`} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"../../styles/CardModal.css\";\r\nimport { RiCloseLine } from \"react-icons/ri\";\r\n\r\nexport const CardModal = (props) => {\r\n  let iconStyles = {\r\n    color: \"whitesmoke\",\r\n    width: \"30\",\r\n    height: \"30\",\r\n  };\r\n  const { openModal, setOpenModal } = props;\r\n\r\n  const closeModal = () => {\r\n    setOpenModal(false);\r\n  };\r\n  return (\r\n    <>\r\n      {openModal ? (\r\n        <div className=\"card-modal\">\r\n          <div className=\"window\">\r\n            <div className=\"window-content\">\r\n              <div className=\"close-modal\">\r\n                <button className=\"close\" onClick={closeModal}>\r\n                  <RiCloseLine style={iconStyles} />\r\n                </button>\r\n              </div>\r\n              <div className=\"image-container\">\r\n                <img src={props.imageURL} alt=\"s\" />\r\n              </div>\r\n              <div className=\"card-info-container\">\r\n                <h2 className=\"title\">{props.title}</h2>\r\n                <p className=\"description\">{props.desc}</p>\r\n                <p className=\"price\">{props.price}</p>\r\n                <p className=\"developer\">{props.dev}</p>\r\n              </div>\r\n              <div className=\"button\">\r\n                <button id=\"buy-btn\">Buy</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardModal;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Card from \"./Card\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { supabase } from \"../supabase\";\r\nimport { CardModal } from \"./Modal/CardModal\";\r\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\r\nimport \"../styles/Games.css\";\r\n\r\nfunction GameCardDisplay() {\r\n  const [cards, setCards] = useState();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState();\r\n  const [modalDesc, setModalDesc] = useState();\r\n  const [modalPrice, setModalPrice] = useState();\r\n  const [modalUrl, setModalUrl] = useState();\r\n  const [modalDev, setModalDev] = useState();\r\n  const cardArray = [];\r\n  const titles = [];\r\n  const descriptions = [];\r\n  const prices = [];\r\n  const developers = [];\r\n  const imageURLs = [];\r\n  let { slug } = useParams();\r\n\r\n  const iconStyles = {\r\n    color: \"007fc4\",\r\n    width: \"50\",\r\n    height: \"50\",\r\n  };\r\n\r\n  const memoizedHandleClick = useCallback(\r\n    () => {\r\n      setToggle(true);\r\n    },\r\n    [] // Tells React to memoize regardless of arguments.\r\n  );\r\n  const getCardTitle = (title) => {\r\n    setModalTitle(title);\r\n  };\r\n  const getCardDescription = (desc) => {\r\n    setModalDesc(desc);\r\n  };\r\n  const getCardPrice = (price) => {\r\n    setModalPrice(price);\r\n  };\r\n  const getCardImageURL = (url) => {\r\n    setModalUrl(url);\r\n  };\r\n  const getCardDeveloper = (dev) => {\r\n    setModalDev(dev);\r\n  };\r\n\r\n  async function getGames() {\r\n    setLoading(true);\r\n    const { data } = await supabase.from(\"games\").select();\r\n    const { data: title } = await supabase.from(\"games\").select(\"title\");\r\n    const { data: description } = await supabase\r\n      .from(\"games\")\r\n      .select(\"description\");\r\n    const { data: price } = await supabase.from(\"games\").select(\"price\");\r\n    const { data: imageURL } = await supabase.from(\"games\").select(\"image_url\");\r\n    const { data: developer } = await supabase\r\n      .from(\"games\")\r\n      .select(\"developer\");\r\n\r\n    if (data.length === 0) {\r\n      setError(\"Sorry... There aren't any games yet.\");\r\n    } else {\r\n      for (let index = 0; index < data.length; index++) {\r\n        const element = cardArray[index];\r\n        cardArray.push(element);\r\n      }\r\n\r\n      for (var t in title) {\r\n        titles.push(title[t]);\r\n      }\r\n      for (var d in description) {\r\n        descriptions.push(description[d]);\r\n      }\r\n      for (var p in price) {\r\n        prices.push(price[p]);\r\n      }\r\n      for (var dev in developer) {\r\n        developers.push(developer[dev]);\r\n      }\r\n      for (var url in imageURL) {\r\n        imageURLs.push(imageURL[url]);\r\n      }\r\n\r\n      const listCards = cardArray.map((item, index) => (\r\n        <Card\r\n          key={index}\r\n          URL={imageURLs[index].image_url}\r\n          title={titles[index].title}\r\n          description={descriptions[index].description}\r\n          price={`${prices[index].price}$`}\r\n          developer={developers[index].developer}\r\n          onClick={() => {\r\n            memoizedHandleClick();\r\n            getCardTitle(titles[index].title);\r\n            getCardDescription(descriptions[index].description);\r\n            getCardPrice(`${prices[index].price}$`);\r\n            getCardDeveloper(developers[index].developer);\r\n            getCardImageURL(imageURLs[index].image_url);\r\n          }}\r\n        />\r\n      ));\r\n      setCards(listCards);\r\n      setLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (!cards) {\r\n      getGames();\r\n    }\r\n  }, [modalTitle]);\r\n\r\n  return (\r\n    <>\r\n      <CardModal\r\n        title={modalTitle}\r\n        desc={modalDesc}\r\n        price={modalPrice}\r\n        imageURL={modalUrl}\r\n        dev={modalDev}\r\n        openModal={toggle}\r\n        setOpenModal={setToggle}\r\n      />\r\n      <div className=\"game-display-page\">\r\n        {loading ? (\r\n          <div className=\"loader-container\">\r\n            <div className=\"loader\">\r\n              <AiOutlineLoading3Quarters style={iconStyles} />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className={error ? \"content-error\" : \"content-page\"}>\r\n            {error ? error : cards}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GameCardDisplay;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"../styles/Dashboard.css\";\r\nimport { supabase } from \"../supabase\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\n\r\nfunction DashboardSettings() {\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const usernameRef = useRef();\r\n  const fnameRef = useRef();\r\n  const lnameRef = useRef();\r\n  const websiteRef = useRef();\r\n  const { user } = useAuth();\r\n\r\n  async function updateProfile() {\r\n    const username = usernameRef.current.value;\r\n    const fname = fnameRef.current.value;\r\n    const lname = lnameRef.current.value;\r\n    const website = websiteRef.current.value;\r\n\r\n    setError(\"\");\r\n    setSuccess();\r\n    const { error } = await supabase.from(\"profiles\").upsert({\r\n      id: user?.id,\r\n      username: username,\r\n      first_name: fname,\r\n      last_name: lname,\r\n      website: website,\r\n    });\r\n\r\n    if (error) {\r\n      setSuccess(\"\");\r\n      setError(error.message);\r\n    } else {\r\n      setError(\"\");\r\n      setSuccess(\"Changes saved successfully.\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-content\">\r\n      <div className=\"notification-handling\">\r\n        <div className={success ? \"success\" : null}>{success}</div>\r\n        <div className={error ? \"error\" : null}>{error}</div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <label>General</label>\r\n        </div>\r\n        <div className=\"sub-header\">\r\n          <div className=\"sub-header-content\">\r\n            <label>Username</label>\r\n            <input type=\"text\" id=\"username\" ref={usernameRef}></input>\r\n          </div>\r\n          <div className=\"sub-header-content\">\r\n            <label>First name</label>\r\n            <input type=\"text\" id=\"fname\" ref={fnameRef}></input>\r\n          </div>\r\n          <div className=\"sub-header-content\">\r\n            <label>Last name</label>\r\n            <input type=\"text\" id=\"lname\" ref={lnameRef}></input>\r\n          </div>\r\n          <div className=\"sub-header-content\">\r\n            <label>Website</label>\r\n            <input type=\"text\" id=\"website\" ref={websiteRef}></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"header\">\r\n          <label>Security</label>\r\n        </div>\r\n        <div className=\"sub-header\">\r\n          <div className=\"sub-header-content\">\r\n            <label>Password</label>\r\n            <input type=\"password\" id=\"password\"></input>\r\n          </div>\r\n          <div className=\"sub-header-content\">\r\n            <label>Confirm new password</label>\r\n            <input type=\"password\" id=\"c-password\"></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"button-container\">\r\n        <button onClick={updateProfile} id=\"save-btn\">\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardSettings;\r\n","import React from \"react\";\r\nimport \"../styles/Dashboard.css\";\r\nimport DashboardSettings from \"./DashboardSettings\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div className=\"account-page\">\r\n      <div className=\"profile-container\">\r\n        <div className=\"avatar-container\">\r\n          <div className=\"avatar\"></div>\r\n        </div>\r\n        <div className=\"user-info\">\r\n          <div className=\"names\">\r\n            <p>Test Test</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <DashboardSettings />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useRef } from \"react\";\r\nimport \"../styles/Upload.css\";\r\nimport { supabase } from \"../supabase\";\r\nimport { useAuth } from \"../auth/AuthProvider\";\r\n\r\nfunction Upload() {\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gameTitleRef = useRef();\r\n  const gameDescriptionRef = useRef();\r\n  const gamePriceRef = useRef();\r\n  const gameDevRef = useRef();\r\n  const { user } = useAuth();\r\n  const imageURL = {\r\n    url: \"\",\r\n  };\r\n\r\n  async function uploadImage(e) {\r\n    const file = e.target.files[0];\r\n\r\n    const { data, error } = await supabase.storage\r\n      .from(\"card-images\")\r\n      .upload(`images/${file.name}`, file);\r\n\r\n    const { publicURL } = supabase.storage\r\n      .from(\"card-images\")\r\n      .getPublicUrl(`images/${file.name}`);\r\n    imageURL.url = publicURL;\r\n  }\r\n  async function handleUpload(e) {\r\n    const title = gameTitleRef.current.value;\r\n    const description = gameDescriptionRef.current.value;\r\n    const price = gamePriceRef.current.value;\r\n    const developer = gameDevRef.current.value;\r\n\r\n    e.preventDefault();\r\n\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n    const { error } = await supabase.from(\"games\").upsert({\r\n      uploaded_by: user?.id,\r\n      image_url: imageURL.url,\r\n      title: title,\r\n      description: description,\r\n      price: price,\r\n      developer: developer,\r\n    });\r\n\r\n    if (error) {\r\n      setError(error.message);\r\n    } else {\r\n      setSuccess(\"Game was uploaded successfully!\");\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"upload-container\">\r\n        <form className=\"upload-form\">\r\n          <h1 id=\"header\">Upload a game</h1>\r\n          <div className=\"notification-handling\">\r\n            <div className={success ? \"success\" : \"error\"}>\r\n              {success ? success : error}\r\n            </div>\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label htmlFor=\"title\">Game title</label>\r\n            <input type=\"text\" id=\"title\" ref={gameTitleRef} required />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label htmlFor=\"image\">Display image</label>\r\n            <input\r\n              type=\"file\"\r\n              id=\"image\"\r\n              onChange={uploadImage}\r\n              required\r\n            ></input>\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label htmlFor=\"description\">Game description</label>\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"description\"\r\n              ref={gameDescriptionRef}\r\n              required\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label htmlFor=\"price\">Game Price</label>\r\n            <input type=\"text\" id=\"price\" ref={gamePriceRef} required></input>\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label htmlFor=\"developer\">Developer</label>\r\n            <input type=\"text\" id=\"developer\" ref={gameDevRef} required></input>\r\n          </div>\r\n          <button disabled={isLoading} onClick={handleUpload} id=\"upload-btn\">\r\n            {isLoading ? <span>Uploading...</span> : <span>Upload</span>}\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"upload-guidelines\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import \"./App.css\";\nimport { Provider } from \"react-supabase\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport HomePage from \"./components/HomePage\";\nimport AuthLogin from \"./components/AuthLogin\";\nimport AuthRegister from \"./components/AuthRegister\";\nimport Games from \"./components/Games\";\nimport { supabase } from \"./supabase\";\nimport AuthProvider from \"./auth/AuthProvider\";\nimport Dashboard from \"./components/Dashboard\";\nimport Upload from \"./components/Upload\";\nimport CardDetails from \"./components/CardDetails\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <AuthProvider>\n          <Provider value={supabase}>\n            <Switch>\n              <NavBar />\n            </Switch>\n            <Route exact path=\"/app-gallery\" component={HomePage} />\n            <Route path=\"/login\" component={AuthLogin} />\n            <Route path=\"/register\" component={AuthRegister} />\n            <Route exact path=\"/games\" component={Games} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route path=\"/upload\" component={Upload} />\n            {/* <Route path=\"/games/:slug\" component={CardDetails} /> */}\n          </Provider>\n        </AuthProvider>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}